{"version":3,"sources":["redux/blockchain/types.js","redux/blockchain/actions.js","helpers/utils.js","helpers/transaction.helper.js","data/color.palette.js","helpers/color.helper.js","helpers/wallet.helper.js","helpers/block.helper.js","helpers/chain.helper.js","components/Wallet.jsx","components/ValidationTag.jsx","components/EditableTransactions.jsx","hooks/wallet.hooks.js","components/Block.jsx","components/Transactions.jsx","components/PendingTransactions.jsx","components/Chain.jsx","redux/wallets/types.js","components/Wallets.jsx","redux/wallets/actions.js","components/CreateTransactions.jsx","App.js","reportWebVitals.js","redux/blockchain/reducers.js","redux/blockchain/index.js","redux/wallets/reducers.js","redux/wallets/index.js","redux/index.js","index.js"],"names":["CHANGE_DIFFICULTY","CHANGE_REWARD","UPDATE_BLOCK","UPDATE_TX","ADD_TRANSACTION","MINE","updateBlock","index","block","type","payload","updateTransaction","blockIndex","txIndex","tx","generateId","Math","random","toString","substr","EC","ec","TransactionHelper","from","to","amount","id","fromAddress","toAddress","signature","fromPublicKey","toPublicKey","SHA256","owner","publicKey","Error","hashTx","this","calculateHash","key","keyFromPrivate","privateKey","sig","sign","toDER","length","keyFromPublic","verify","colorPalette","ColorHelper","hexadecimalColor","color","substring","rgb","parseInt","floor","str","hash","i","charCodeAt","c","hashCode","toUpperCase","satoshiKey","genKeyPair","satoshi","name","textColor","getPublic","getPrivate","WalletHelper","getColorFromColorPalette","faker","firstName","isBright","getSatoshi","BlockHelper","timestamp","transactions","previousHash","nonce","difficulty","Array","fill","join","miningReward","createBlock","Date","toISOString","split","createTx","JSON","stringify","every","isValid","chain","hasValidTransactions","ChainHelper","latestBlockHash","pendingTx","miner","rewardTX","push","mineBlock","address","balance","parseFloat","Wallet","wallet","withAmount","useSelector","state","blockchain","className","style","backgroundColor","getBalanceOfAddress","ValidationTag","valid","EditableTransactions","ADDRESS_TYPE","dispatch","useDispatch","wallets","selectOptions","map","value","useWalletOptions","handleSelect","property","target","newTX","find","w","getWallet","onChange","e","min","newTx","handleAmount","intToRGB","Block","handleInput","isNumber","newBlock","parsedHash","useCallback","blockColor","borderColor","htmlFor","Transactions","PendingTX","pendingTransactions","useState","opened","setOpened","setMiner","stop","stopPropagation","handleMine","minerWallet","mine","getLatestBlock","handleSelectMiner","onClick","disabled","renderTransactions","Chain","isValidChain","max","changeDifficulty","reward","ADD_WALLET","Wallets","renderWalletPill","CreateTransactions","setFrom","setTo","setAmount","error","setError","setter","clean","validate","fromTx","toTx","renderSelectOptions","step","parsedAmount","errors","console","signTx","addTransaction","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","createGenesisBlock","reducers","action","splice","createRandomWallet","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.b0516e35.chunk.js","sourcesContent":["export const CHANGE_DIFFICULTY = 'CHANGE_DIFFICULTY'\nexport const CHANGE_REWARD = 'CHANGE_REWARD'\nexport const UPDATE_BLOCK = 'UPDATE_BLOCK'\nexport const UPDATE_TX = 'UPDATE_TX'\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION'\nexport const MINE = 'MINE'","import { ADD_TRANSACTION, CHANGE_DIFFICULTY, CHANGE_REWARD, MINE, UPDATE_BLOCK, UPDATE_TX } from \"./types\"\n\nexport const changeDifficulty = (difficulty) => {\n  return {\n    type: CHANGE_DIFFICULTY,\n    payload: difficulty\n  }\n}\n\nexport const changeReward = (reward) => {\n  return {\n    type: CHANGE_REWARD,\n    payload: reward\n  }\n}\n\nexport const updateBlock = (index, block) => {\n  return {\n    type: UPDATE_BLOCK,\n    payload: {\n      index,\n      block\n    }\n  }\n}\n\nexport const addTransaction = (tx) => {\n  return {\n    type: ADD_TRANSACTION,\n    payload: tx\n  }\n}\n\nexport const updateTransaction = (blockIndex, txIndex, tx) => {\n  return {\n    type: UPDATE_TX,\n    payload: {\n      blockIndex,\n      txIndex,\n      tx\n    }\n  }\n}\n\nexport const mine = (block) => {\n  return {\n    type: MINE,\n    payload: block\n  }\n}","export const generateId = () => Math.random().toString(36).substr(2, 9)\nexport const debounce = (fn, time) => {\n  let timeoutId\n  return (...args) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    console.log(timeoutId)\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      console.log('saving')\n      //fn(...args)\n    }, time)\n  }\n}","import { SHA256 } from 'crypto-js'\nimport { generateId } from './utils'\nimport { ec } from 'elliptic'\nconst EC = new ec('secp256k1')\n\nclass TransactionHelper {\n  static createTx (from, to, amount, id = null) {\n    return {\n      id: id || generateId(),\n      fromAddress: from,\n      toAddress: to,\n      amount,\n      signature: ''\n    }\n  }\n  static calculateHash(fromPublicKey, toPublicKey, amount) {\n    return SHA256(fromPublicKey + toPublicKey + amount).toString()\n  }\n  static signTx(tx, owner) {\n    if (owner.publicKey !== tx.fromAddress.publicKey)\n      throw new Error('You cannot sign transactions for other wallets')\n    const hashTx = this.calculateHash(tx.fromAddress.publicKey, tx.toAddress.publicKey, tx.amount)\n    const key = EC.keyFromPrivate(owner.privateKey, 'hex')\n    const sig = EC.sign(hashTx, key)\n    tx.signature = sig.toDER('hex')\n  }\n\n  static isValid(tx) {\n      if (tx.fromAddress === null) return true\n      if (!tx.signature || tx.signature.length === 0)\n        throw new Error('No signature in this transaction')\n      const publicKey = EC.keyFromPublic(\n        tx.fromAddress.publicKey,\n        'hex'\n      )\n      const hashTx = this.calculateHash(tx.fromAddress.publicKey, tx.toAddress.publicKey, tx.amount)\n      return publicKey.verify(hashTx, tx.signature)\n  }\n}\n\nexport default TransactionHelper","export const colorPalette = [\n  '#F44336',\n  '#FFEBEE',\n  '#FFCDD2',\n  '#EF9A9A',\n  '#E57373',\n  '#EF5350',\n  '#E53935',\n  '#D32F2F',\n  '#C62828',\n  '#B71C1C',\n  '#FF8A80',\n  '#FF5252',\n  '#FF1744',\n  '#D50000',\n  '#FCE4EC',\n  '#F8BBD0',\n  '#F48FB1',\n  '#F06292',\n  '#EC407A',\n  '#E91E63',\n  '#D81B60',\n  '#C2185B',\n  '#AD1457',\n  '#880E4F',\n  '#FF80AB',\n  '#FF4081',\n  '#F50057',\n  '#C51162',\n  '#F3E5F5',\n  '#E1BEE7',\n  '#CE93D8',\n  '#BA68C8',\n  '#AB47BC',\n  '#9C27B0',\n  '#8E24AA',\n  '#7B1FA2',\n  '#6A1B9A',\n  '#4A148C',\n  '#EA80FC',\n  '#E040FB',\n  '#D500F9',\n  '#AA00FF',\n  '#EDE7F6',\n  '#D1C4E9',\n  '#B39DDB',\n  '#9575CD',\n  '#7E57C2',\n  '#673AB7',\n  '#5E35B1',\n  '#512DA8',\n  '#4527A0',\n  '#311B92',\n  '#B388FF',\n  '#7C4DFF',\n  '#651FFF',\n  '#6200EA',\n  '#E8EAF6',\n  '#C5CAE9',\n  '#9FA8DA',\n  '#7986CB',\n  '#5C6BC0',\n  '#3F51B5',\n  '#3949AB',\n  '#303F9F',\n  '#283593',\n  '#1A237E',\n  '#8C9EFF',\n  '#536DFE',\n  '#3D5AFE',\n  '#304FFE',\n  '#E3F2FD',\n  '#BBDEFB',\n  '#90CAF9',\n  '#64B5F6',\n  '#42A5F5',\n  '#2196F3',\n  '#1E88E5',\n  '#1976D2',\n  '#1565C0',\n  '#0D47A1',\n  '#82B1FF',\n  '#448AFF',\n  '#2979FF',\n  '#2962FF',\n  '#E1F5FE',\n  '#B3E5FC',\n  '#81D4FA',\n  '#4FC3F7',\n  '#29B6F6',\n  '#03A9F4',\n  '#039BE5',\n  '#0288D1',\n  '#0277BD',\n  '#01579B',\n  '#80D8FF',\n  '#40C4FF',\n  '#00B0FF',\n  '#0091EA',\n  '#E0F7FA',\n  '#B2EBF2',\n  '#80DEEA',\n  '#4DD0E1',\n  '#26C6DA',\n  '#00BCD4',\n  '#00ACC1',\n  '#0097A7',\n  '#00838F',\n  '#006064',\n  '#84FFFF',\n  '#18FFFF',\n  '#00E5FF',\n  '#00B8D4',\n  '#E0F2F1',\n  '#B2DFDB',\n  '#80CBC4',\n  '#4DB6AC',\n  '#26A69A',\n  '#009688',\n  '#00897B',\n  '#00796B',\n  '#00695C',\n  '#004D40',\n  '#A7FFEB',\n  '#64FFDA',\n  '#1DE9B6',\n  '#00BFA5',\n  '#E8F5E9',\n  '#C8E6C9',\n  '#A5D6A7',\n  '#81C784',\n  '#66BB6A',\n  '#4CAF50',\n  '#43A047',\n  '#388E3C',\n  '#2E7D32',\n  '#1B5E20',\n  '#B9F6CA',\n  '#69F0AE',\n  '#00E676',\n  '#00C853',\n  '#F1F8E9',\n  '#DCEDC8',\n  '#C5E1A5',\n  '#AED581',\n  '#9CCC65',\n  '#8BC34A',\n  '#7CB342',\n  '#689F38',\n  '#558B2F',\n  '#33691E',\n  '#CCFF90',\n  '#B2FF59',\n  '#76FF03',\n  '#64DD17',\n  '#F9FBE7',\n  '#F0F4C3',\n  '#E6EE9C',\n  '#DCE775',\n  '#D4E157',\n  '#CDDC39',\n  '#C0CA33',\n  '#AFB42B',\n  '#9E9D24',\n  '#827717',\n  '#F4FF81',\n  '#EEFF41',\n  '#C6FF00',\n  '#AEEA00',\n  '#FFFDE7',\n  '#FFF9C4',\n  '#FFF59D',\n  '#FFF176',\n  '#FFEE58',\n  '#FFEB3B',\n  '#FDD835',\n  '#FBC02D',\n  '#F9A825',\n  '#F57F17',\n  '#FFFF8D',\n  '#FFFF00',\n  '#FFEA00',\n  '#FFD600',\n  '#FFF8E1',\n  '#FFECB3',\n  '#FFE082',\n  '#FFD54F',\n  '#FFCA28',\n  '#FFC107',\n  '#FFB300',\n  '#FFA000',\n  '#FF8F00',\n  '#FF6F00',\n  '#FFE57F',\n  '#FFD740',\n  '#FFC400',\n  '#FFAB00',\n  '#FFF3E0',\n  '#FFE0B2',\n  '#FFCC80',\n  '#FFB74D',\n  '#FFA726',\n  '#FF9800',\n  '#FB8C00',\n  '#F57C00',\n  '#EF6C00',\n  '#E65100',\n  '#FFD180',\n  '#FFAB40',\n  '#FF9100',\n  '#FF6D00',\n  '#FBE9E7',\n  '#FFCCBC',\n  '#FFAB91',\n  '#FF8A65',\n  '#FF7043',\n  '#FF5722',\n  '#F4511E',\n  '#E64A19',\n  '#D84315',\n  '#BF360C',\n  '#FF9E80',\n  '#FF6E40',\n  '#FF3D00',\n  '#DD2C00',\n  '#EFEBE9',\n  '#D7CCC8',\n  '#BCAAA4',\n  '#A1887F',\n  '#8D6E63',\n  '#795548',\n  '#6D4C41',\n  '#5D4037',\n  '#4E342E',\n  '#3E2723',\n  '#FAFAFA',\n  '#F5F5F5',\n  '#EEEEEE',\n  '#E0E0E0',\n  '#BDBDBD',\n  '#9E9E9E',\n  '#757575',\n  '#616161',\n  '#424242',\n  '#212121',\n  '#ECEFF1',\n  '#CFD8DC',\n  '#B0BEC5',\n  '#90A4AE',\n  '#78909C',\n  '#607D8B',\n  '#546E7A',\n  '#455A64',\n  '#37474F',\n  '#263238',\n  '#000000']","import { colorPalette } from '../data/color.palette'\nexport default class ColorHelper {\n  static isBright(hexadecimalColor) {\n    const color = hexadecimalColor.substring(1) // strip #\n    const rgb = parseInt(color, 16) // convert rrggbb to decimal\n    const r = (rgb >> 16) & 0xff // extract red\n    const g = (rgb >> 8) & 0xff // extract green\n    const b = (rgb >> 0) & 0xff // extract blue\n\n    const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b // per ITU-R BT.709\n\n    if (luma < 80) {\n      return false\n    }\n    return true\n  }\n  static getRandomHexadecimalColor() {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`\n  }\n  static getColorFromColorPalette() {\n    return colorPalette[Math.floor(Math.random() * 100000) % colorPalette.length]\n  }\n  static hashCode(str) { // java String#hashCode\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n       hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n  } \n\n  static intToRGB(i) {\n    let str = this.hashCode(i)\n    var c = (str & 0x00FFFFFF)\n        .toString(16)\n        .toUpperCase();\n\n    return \"#\"+\"00000\".substring(0, 6 - c.length) + c;\n  }\n}\n","import { ec } from 'elliptic'\nimport faker from 'faker'\nimport ColorHelper from './color.helper'\nconst EC = new ec('secp256k1')\nconst satoshiKey = EC.genKeyPair()\nconst satoshi = {\n  name: 'Satoshi',\n  color: '#ff0066',\n  textColor: 'white',\n  publicKey: satoshiKey.getPublic('hex'),\n  privateKey: satoshiKey.getPrivate('hex')\n}\n\nexport default class WalletHelper {\n\n  static createRandomWallet() {\n    let key = EC.genKeyPair()\n    let color = ColorHelper.getColorFromColorPalette()\n    let publicKey = key.getPublic('hex')\n    let privateKey = key.getPrivate('hex')\n    return {\n      name: faker.name.firstName(),\n      color,\n      textColor: ColorHelper.isBright(color) ? 'black' : 'white',\n      publicKey,\n      privateKey,\n    }\n  }\n  static getSatoshi = () => satoshi\n}\n","import { SHA256 } from 'crypto-js'\nimport TransactionHelper from './transaction.helper'\nimport { generateId } from './utils'\nimport WalletHelper from './wallet.helper'\n\nclass BlockHelper {\n  // All the info need to create a block in our chain, in this step we change data with a transactions array per each block\n\n  static createBlock(timestamp, transactions, previousHash = '') {\n    return {\n      id: generateId(),\n      timestamp,\n      transactions,\n      previousHash,\n      nonce: 0,\n      hash: this.calculateHash(timestamp, transactions, previousHash, 0)\n    }\n  }\n  \n  // Getting the hash with the amount of 0 based on the difficulty\n  static mineBlock(block, difficulty) {\n\n    let { timestamp, transactions, previousHash } = block\n    while (block.hash.substring(0, difficulty) !== Array(difficulty).fill(0).join('')) {\n      block.nonce++\n      block.hash = this.calculateHash(timestamp, transactions, previousHash, block.nonce)\n    }\n  }\n\n  static createGenesisBlock(miningReward) {\n    let block = this.createBlock(new Date().toISOString().split('T')[0], [TransactionHelper.createTx(null, WalletHelper.getSatoshi(), miningReward)], '')\n    return block\n  }\n  // Method that calculates the hash of the block\n  static calculateHash(timestamp, transactions, previousHash, nonce) {\n    return SHA256(timestamp + JSON.stringify(transactions) + previousHash + nonce).toString()\n  }\n\n  static hasValidTransactions(block) {\n    return block.transactions.every(tx => TransactionHelper.isValid(tx))\n  }\n  static isValid(block, chain, index) {\n    if (!this.hasValidTransactions(block)) return false\n      // ensure that the hash info of the current block is ok and hasn't been modified\n      if (block.hash !== this.calculateHash(block.timestamp, block.transactions, block.previousHash, block.nonce)) return false\n      if(index === 0) return true\n      // checking that the prevous block information is ok\n      let { timestamp, transactions, previousHash, nonce } = chain[index - 1]\n      if (block.previousHash !== this.calculateHash(timestamp, transactions, previousHash, nonce)) return false\n      if (!this.isValid(chain[index - 1], chain, index - 1)) return false\n      return true\n  }\n}\n\nexport default BlockHelper","import BlockHelper from \"./block.helper\"\nimport TransactionHelper from \"./transaction.helper\"\n\nclass ChainHelper {\n  static mine(latestBlockHash, pendingTx, miningReward, difficulty, miner) {\n    // Adding the miner Tx to the pending ones to get the reward\n    const rewardTX = TransactionHelper.createTx(null, miner, miningReward)\n    pendingTx.push(rewardTX)\n    // Creating a block containing the pending transactions\n    const block = BlockHelper.createBlock(new Date().toISOString().split('T')[0], pendingTx, latestBlockHash)\n    BlockHelper.mineBlock(block, difficulty)\n    return block\n  }\n\n  static getLatestBlock(chain) {\n    return chain[chain.length - 1]\n  }\n\n  static getBalanceOfAddress(chain, address) {\n    let balance = 0\n    // Looping all blocks\n    for (const block of chain) {\n      // Looping all transactions inside a block\n      for(const tx of block.transactions) {\n        // If you are the sender, the total amount have to decrease\n        if(tx.fromAddress?.publicKey === address) balance -= parseFloat(tx.amount)\n        // If you are the receiver, the total amount have to increase\n        if(tx.toAddress?.publicKey === address) balance += parseFloat(tx.amount)\n      }\n    }\n\n    return balance\n  }\n\n  static isValidChain(chain) {\n    // Analyzes each block (the genesis shouldn't be analyzed) comparing the store information of the previous block with the current information of the previousblock, recalculating the hash\n    return chain.every((block, index) => BlockHelper.isValid(block, chain, index))\n  }\n}\n\nexport default ChainHelper","import { useSelector } from 'react-redux'\nimport ChainHelper from './../helpers/chain.helper'\n\nconst Wallet = ({ wallet, withAmount = false }) => {\n  const { chain } = useSelector(state => state.blockchain)\n\n  return (\n    <div className=\"cursor-pointer\">\n      { !wallet ?  <span className=\"py-1 px-2 rounded-md bg-gray-500 text-white\">Blockchain</span>\n        :\n      <span \n      style={{backgroundColor: wallet.color, color: wallet.textColor}}\n      className=\"rounded-md flex items-center\">\n        <div className=\"px-2\">\n          {wallet.name}\n        </div>\n        { withAmount ?\n          <div className=\"px-2 text-black bg-white rounded-r-md -m-1\">\n            {ChainHelper.getBalanceOfAddress(chain, wallet.publicKey)}\n          </div>\n          :\n          null\n        }\n      </span>\n    }\n    </div>\n  )\n}\n\nexport default Wallet","const ValidationTag = ({valid}) => {\n  return (\n    <div className=\"text-white font-bold\">\n      { valid ? <div className=\"bg-green-500 px-2 rounded\">VALID</div> : <div className=\"bg-red-500 px-2 rounded\">INVALID</div>}\n    </div>\n  )\n}\n\nexport default ValidationTag","import Wallet from './Wallet'\nimport { useWalletOptions } from './../hooks/wallet.hooks'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateTransaction } from '../redux/blockchain/actions'\nimport ColorHelper from '../helpers/color.helper'\nimport TransactionHelper from '../helpers/transaction.helper'\nimport ValidationTag from './ValidationTag'\nconst EditableTransactions = ({transactions, blockIndex}) => {\n  const ADDRESS_TYPE = {\n    FROM: 'fromAddress',\n    TO: 'toAddress'\n  }\n  const dispatch = useDispatch()\n  const { wallets } = useSelector(state => state.wallets)\n  const selectOptions = useWalletOptions(wallets)\n  // handlers\n  const handleSelect = (property, index, tx, { target: { value }}) => {\n    let newTX = {...tx}\n    const getWallet = (value) => wallets.find(w => w.publicKey === value)\n    newTX[property] = getWallet(value)\n    dispatch(updateTransaction(blockIndex, index, newTX))\n  }\n\n  const handleAmount = (index, tx, {target: { value }}) => {\n    const newTx = {\n      ...tx,\n      amount: parseFloat(value)\n    }\n    dispatch(updateTransaction(blockIndex, index, newTx))\n  }\n  // renders\n  const renderTransactions = () => {\n    return transactions.map((tx, i) => {\n      const { fromAddress, toAddress, signature } = tx\n      const hash = TransactionHelper.calculateHash(fromAddress ? fromAddress.publicKey : null, toAddress.publicKey, tx.amount)\n      return (<div className=\"flex items-center my-2\" key={tx.id}>\n        { fromAddress ?\n        <select name=\"from\" id=\"from\" value={fromAddress.publicKey} onChange={(e) => handleSelect(ADDRESS_TYPE.FROM, i, tx, e)}>\n            { selectOptions } \n        </select>\n        :\n        <Wallet wallet={fromAddress} />\n        }\n        <div className=\"mx-2\">sends</div>\n        <div>\n          <input className=\"w-28\" type=\"number\" min=\"0\" value={tx.amount} onChange={(e) => handleAmount(i, tx, e)}/>\n        </div>\n        <div className=\"mx-2\">to</div>\n        <select name=\"from\" id=\"from\" value={toAddress.publicKey} onChange={(e) => handleSelect(ADDRESS_TYPE.TO, i, tx, e)}>\n            { selectOptions } \n        </select>\n        <div className=\"whitespace-nowrap overflow-hidden overflow-ellipsis\">\n            <span className=\"mx-2 font-bold\">Tx Hash: </span>\n            <span className=\"rounded px-2 text-white\" style={{backgroundColor: ColorHelper.intToRGB(hash.substring(0,10))}} >{hash.substring(0,10)}...</span>\n        </div>\n        {\n          signature !== '' ?\n          (<div className=\"whitespace-nowrap overflow-hidden overflow-ellipsis\">\n            <span className=\"mx-2 font-bold\">Signature: </span>\n            <span className=\"rounded px-2 text-white\" style={{backgroundColor: ColorHelper.intToRGB(signature.substring(0,10))}} >{signature.substring(0,10)}...</span>\n          </div>)\n          :\n          null\n        }\n        <div className=\"mx-2\">\n          { <ValidationTag valid={TransactionHelper.isValid(tx)} /> }\n        </div>\n      </div>)\n    })\n  }\n\n  return (\n    <div className=\"px-2 py-2\">\n      { renderTransactions() }\n    </div>)\n}\n\nexport default EditableTransactions","export const useWalletOptions = (wallets) => {\n  return wallets.map(({publicKey, name })=> (<option key={publicKey} value={publicKey}>{name}</option>))\n}","import { useDispatch, useSelector } from \"react-redux\"\nimport { updateBlock } from \"../redux/blockchain/actions\"\nimport EditableTransactions from './EditableTransactions'\nimport ValidationTag from './ValidationTag'\nimport ColorHelper from \"../helpers/color.helper\"\nimport BlockHelper from \"../helpers/block.helper\"\nimport { useCallback } from \"react\"\nconst Block = ({ index, block }) => {\n  const { chain } = useSelector(state => state.blockchain)\n  const { hash, nonce, previousHash, timestamp, transactions} = block\n  const dispatch = useDispatch()\n  // handlers\n  const handleInput = (property, {target: { value }}, isNumber = false) => {\n    let newBlock = {\n      ...block,\n      [property]: !isNumber ? value : parseFloat(value),\n    }\n    dispatch(updateBlock(\n      index,\n      {\n        ...newBlock,\n        //hash: BlockHelper.calculateHash(newBlock.timestamp, newBlock.transactions, newBlock.previousHash, newBlock.nonce)\n      }))\n  }\n\n  const parsedHash = useCallback(() => BlockHelper.calculateHash(timestamp, transactions, previousHash, nonce), [timestamp, transactions, previousHash, nonce])\n  const blockColor = () => ColorHelper.intToRGB(parsedHash())\n  //renders\n  const renderBlock = () => {\n    return (\n      <div>\n        <div className=\"flex mb-2 rounded justify-between\">\n          <p className=\"max-w-xs whitespace-nowrap overflow-hidden overflow-ellipsis\">\n            <span className=\"mr-2 font-bold\">Current Hash: </span>\n            <span className=\"rounded px-2 text-white\" style={{backgroundColor: blockColor()}} >{parsedHash().substring(0,10)}...</span>\n          </p>\n          <div>\n            <ValidationTag valid={BlockHelper.isValid(block, chain, index)} />\n          </div>\n        </div>\n        <div className=\"flex mb-2\">\n          <label className=\"mr-2 font-bold\" htmlFor=\"nonce\">Hash</label>\n          <input className=\"flex-1 pl-2\" value={hash} onChange={(e) => handleInput('hash', e)} type=\"text\"/>\n        </div>\n        <div className=\"flex mb-2\">\n          <label className=\"mr-2 font-bold\" htmlFor=\"nonce\">Nonce</label>\n          <input className=\"flex-1 pl-2\" value={nonce} onChange={(e) => handleInput('nonce', e, true)} type=\"number\" min=\"0\"/>\n        </div>\n        { previousHash ?\n        <div className=\"flex mb-2 items-center\">\n          <label className=\"font-bold\" htmlFor=\"previousHash\">Previous hash</label>\n          <div style={{backgroundColor: ColorHelper.intToRGB(previousHash)}} className=\"mx-2 w-5 h-5 rounded\"></div>\n          <input className=\"flex-1 pl-2\" value={previousHash} onChange={(e) => handleInput('previousHash', e)} type=\"text\"/>\n        </div>\n        : null\n        }\n        <div className=\"flex\">\n          <label className=\"mr-2 font-bold\" htmlFor=\"hash\">Timestamp</label>\n          <input className=\"flex-1 pl-2\" value={ timestamp } onChange={(e) => handleInput('timestamp', e)} type=\"date\"/>\n        </div>\n        {transactions.length ? \n          <div>\n          <p className=\"font-bold\">Transactions:</p>\n          <EditableTransactions transactions={transactions} blockIndex={index}/>\n        </div>\n        : null\n        }\n      </div>\n    )\n  }\n\n\n  return (\n    <div className=\"flex\">\n      <div style={{borderColor: blockColor()}} className={`border-l-8 w-10 rounded shadow px-2 py-4 mr-4 ${BlockHelper.isValid(block, chain, index) ? 'bg-gray-200' : 'bg-red-500 text-white'}`}>\n        <p className=\"font-bold ml-5 uppercase transform origin-top-left rotate-90 absolute\">{index === 0 ? 'Genesis Block' : `Block ${index}`}</p>\n      </div>\n      <div className=\"rounded bg-gray-100 shadow px-2 py-4 flex-1\">\n        { renderBlock() }\n      </div>\n    </div>\n  )\n}\nexport default Block","import Wallet from './Wallet'\nconst Transactions = ({transactions}) => {\n\n  // renders\n  const renderTransactions = () => {\n    return transactions.map(tx => {\n      const { fromAddress, toAddress } = tx\n      return (<div className=\"flex items-center my-2\" key={tx.id}>\n        <Wallet wallet={fromAddress} />\n        <div className=\"mx-2\">sends { tx.amount } to </div>\n        <Wallet wallet={toAddress} />\n      </div>)\n    })\n  }\n\n  return (\n    <div className=\"px-2 py-2\">\n      { renderTransactions() }\n    </div>)\n}\n\nexport default Transactions","import { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ChainHelper from './../helpers/chain.helper'\n//import WorkerContext from './../contexts/mine.worker'\nimport { mine } from \"../redux/blockchain/actions\"\nimport Transactions from './Transactions'\nconst PendingTX = () => {\n  const dispatch = useDispatch()\n  const { pendingTransactions, chain, miningReward, difficulty } = useSelector(state => state.blockchain)\n  const { wallets } = useSelector(state => state.wallets)\n  const [opened, setOpened] = useState(false)\n  const [miner, setMiner] = useState('')\n  //const worker = useContext(WorkerContext)\n\n  //handlers\n  const stop = (e) => {\n    e.stopPropagation()\n  }\n  const handleMine = (e) => {\n    // debugger\n    // const minerWorker = new Worker()\n    const minerWallet = wallets.find(wallet => wallet.publicKey === miner)\n    // NEEDS A WORKER!!\n    let block = ChainHelper.mine(ChainHelper.getLatestBlock(chain).hash, pendingTransactions, miningReward, difficulty, minerWallet)\n    dispatch(mine(block))\n    //worker.postMessage({ pendingTx: pendingTransactions, minerAddress: miner, miningReward, difficulty, latestBlockHash: ChainHelper.getLatestBlock(chain).hash });\n\n    // worker.onmessage = (e) => {\n    //   console.log('reached data')\n    //   dispatch(mine(e.data));\n    // }\n    setMiner('')\n    stop(e)\n  }\n  const handleSelectMiner = ({ target: { value }}) => setMiner(value)\n\n  // renders\n  const renderMiner = () => {\n    return (<div>\n      <label className=\"mr-2\" htmlFor=\"miner\">Miner:</label>\n      <select className=\"w-48 py-1\" value={miner} onChange={handleSelectMiner} onClick={stop} name=\"miner\" id=\"miner\">\n        <option value=\"\">Select an addr</option>\n        { wallets.map(({ publicKey, name }) => (<option key={publicKey} value={publicKey}>{name}</option>))}\n      </select>\n      <button disabled={miner === ''} onClick={handleMine} className=\"py-1 px-2 mx-2 rounded text-white bg-gray-500 hover:bg-gray-600 disavled:hover:bg-gray-500 disabled:opacity-30 disabled:cursor-not-allowed\">Mine ⛏️</button>\n    </div>)\n  }\n\n  const renderTitle = () => {\n    return !pendingTransactions.length ?\n      <h2 className=\"font-bold px-2 py-3\">No Pending Transactions</h2> :\n      (<div className=\"px-2 py-2 flex items-center cursor-pointer hover:bg-gray-200 justify-between rounded-t\" onClick={() => setOpened(!opened)}>\n          <h2 className=\"font-bold flex-1 flex\"><p className=\"font-bold text-center w-5\">{opened ? '-' : '+'}</p>Pending Transactions: </h2>\n          <div>{ renderMiner() }</div>\n          <span className=\"ml-5 flex justify-center items-center w-5 h-5 rounded-full text-white bg-red-500\">{pendingTransactions.length}</span>\n        </div>\n      )\n  }\n  \n  const renderTransactions = () => {\n    if (!opened) return\n    return <Transactions transactions={pendingTransactions} />\n  }\n\n  return (\n    <div className=\"rounded bg-gray-100 shadow\">\n      { renderTitle() }\n      { renderTransactions() }\n    </div>\n  )\n}\n\nexport default PendingTX","import { useDispatch, useSelector } from \"react-redux\"\nimport { changeDifficulty, changeReward } from \"../redux/blockchain/actions\"\n//import mineWorker from './../workers/mine.worker'\nimport Block from './Block'\nimport ValidationTag from './ValidationTag'\nimport PendingTX from \"./PendingTransactions\"\nimport ChainHelper from \"../helpers/chain.helper\"\nconst Chain = () => {\n  //state\n  const { difficulty, miningReward, chain } = useSelector(state => state.blockchain)\n  const dispatch = useDispatch()\n\n  //handlers\n  const handleDifficulty = ({ target: { value }}) => {\n    dispatch(changeDifficulty(parseInt(value === '' ? 0 : value)))\n  }\n  const handleMiningReward = ({ target: { value }}) => {\n    dispatch(changeReward(parseFloat(value === '' ? 0 : value)))\n  }\n\n  //renders\n  const renderBlocks = () => {\n    return chain.map((block, index) => <div className=\"mb-4\" key={block.id}><Block block={block} index={index}></Block></div>)\n  }\n\n  return (\n    <div>\n      <div className=\"flex items-center mb-4\">\n        <h1 className=\"font-bold text-2xl mr-4\">Blockchain</h1>\n        <ValidationTag valid={ChainHelper.isValidChain(chain)}/>\n      </div>\n      <div className=\"flex justify-between mb-4\">\n        <div>\n          <label className=\"mr-4\"htmlFor=\"difficulty\">Difficulty: </label>\n          <input className=\"border border-grey-100 pl-2 w-20\" min=\"0\" max=\"3\"  value={difficulty} type=\"number\" onChange={handleDifficulty}/>\n        </div>\n        <div>\n        <label className=\"mr-4\" htmlFor=\"difficulty\">Mining Reward: </label>\n          <input className=\"border border-grey-100 pl-2\" value={miningReward} type=\"number\" onChange={handleMiningReward} min=\"1\"/>\n        </div>\n      </div>\n      <div className=\"mb-4\">\n        <PendingTX />\n      </div>\n      <div>\n        { renderBlocks() }\n      </div>\n    </div>\n  )\n}\nexport default Chain","const ADD_WALLET = 'ADD_WALLET'\n\nexport { ADD_WALLET }","import Wallet from './Wallet'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { createWallet } from \"../redux/wallets/actions\"\nconst Wallets = () => {\n  const dispatch = useDispatch()\n  const { wallets } = useSelector(state => state.wallets)\n  // renders\n  const renderWallets = () => {\n    if (!wallets.length) return <p className=\"py-1\">There are no wallets yet</p>\n    return wallets.map(wallet => renderWalletPill(wallet))\n  }\n\n  const renderWalletPill = (wallet) => {\n    return (\n      <div className=\"m-1 cursor-pointer flex items-center\" key={wallet.publicKey}>\n        <Wallet wallet={wallet} withAmount={true}/>\n      </div>\n    )\n  }\n\n  // handlers\n  const handleCreateWallet = () => {\n    dispatch(createWallet())\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"font-bold text-xl flex-1\">Wallets</h2>\n        <button onClick={handleCreateWallet} className=\"py-1 px-4 rounded bg-gray-500 text-white focus:outline-none hover:bg-gray-600\">Create</button>\n      </div>\n      <div className=\"p-4 rounded bg-gray-100 w-full\">\n        <div className=\"flex flex-wrap\">\n        { renderWallets() }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Wallets","import { ADD_WALLET } from \"./types\"\n\nexport const createWallet = () => {\n  return {\n    type: ADD_WALLET\n  }\n}","import { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ChainHelper from \"../helpers/chain.helper\"\nimport TransactionHelper from \"../helpers/transaction.helper\"\nimport { addTransaction } from \"../redux/blockchain/actions\"\n\nconst CreateTransactions = () => {\n  const dispatch = useDispatch()\n  //local state\n  const [from, setFrom] = useState('')\n  const [to, setTo] = useState('')\n  const [amount, setAmount] = useState(0)\n  const [error, setError] = useState('')\n  // redux\n  const { wallets } = useSelector(state => state.wallets)\n  const { chain } = useSelector(state => state.blockchain)\n  //handlers\n  const handleInput = (setter, { target: { value }}) => {\n    setter(value)\n    setError('')\n  }\n  const handleAddTransaction = () => {\n    let fromTx = wallets.find(wallet => wallet.publicKey === from)\n    let toTx = wallets.find(wallet => wallet.publicKey === to)\n    let parsedAmount = parseFloat(amount)\n    let errors = validate(fromTx, toTx, parsedAmount)\n    if (!errors) {\n      let tx = TransactionHelper.createTx(fromTx, toTx, parseFloat(amount))\n      TransactionHelper.signTx(tx, fromTx)\n      dispatch(addTransaction(tx))\n      clean()\n    }\n    else {\n      setError(errors)\n      console.error(errors)\n    }\n  }\n\n  //methods\n  const clean = () => {\n    setFrom('')\n    setTo('')\n    setAmount(0)\n  }\n\n  const validate = (fromTx, toTx, amount) => {\n    if (amount <= 0) return 'Amount should be higher than 0'\n    let fromFunds = ChainHelper.getBalanceOfAddress(chain, from)\n    if (fromFunds < amount) return `Insuficient funds of ${fromTx.name}`\n    if (fromTx.publicKey === toTx.publicKey) return 'From and To cannot be the same wallet'\n  }\n\n  //renders\n  const renderSelectOptions = () => {\n    return wallets.map(({publicKey, name })=> (<option key={publicKey} value={publicKey}>{name}</option>))\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <h2 className=\"font-bold text-xl mb-4\">Transactions</h2>\n      <div className=\"p-4 rounded bg-gray-100 w-full shadow\">\n        <div className=\"flex mb-2\">\n          <label className=\"font-bold mr-2\" htmlFor=\"from\">From Address: </label>\n          <select className=\"flex-1\" name=\"from\" id=\"from\" value={from} onChange={(e) => handleInput(setFrom, e)}>\n            <option>Select an addr</option>\n            {renderSelectOptions() } \n          </select>\n        </div>\n        <div className=\"flex mb-2\">\n          <label className=\"font-bold mr-2\" htmlFor=\"to\">To Address: </label>\n          <select className=\"flex-1\" name=\"to\" id=\"to\" value={to} onChange={(e) => handleInput(setTo, e)}>\n            <option>Select an addr</option>\n            {renderSelectOptions() } \n          </select>\n        </div>\n        <div className=\"flex\">\n          <label className=\"font-bold mr-2\" htmlFor=\"from\">Amount: </label>\n          <input className=\"flex-1\" value={amount} onChange={(e) => handleInput(setAmount, e)} type=\"number\" step=\"10\" min=\"0\"/>\n        </div>\n        <div className=\"h-8 flex items-center text-red-400\">\n          { error }\n        </div>\n        <button\n          disabled={!amount || from === '' || to === ''} \n          onClick={handleAddTransaction} className=\"w-full py-1 px-4 rounded bg-gray-500 text-white focus:outline-none hover:bg-gray-600 disabled:bg-gray-200 disabled:cursor-not-allowed\">Create</button>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateTransactions","import Chain from './components/Chain'\nimport Wallets from './components/Wallets'\nimport CreateTransactions from './components/CreateTransactions'\nimport { useSelector } from 'react-redux';\nimport ChainHelper from './helpers/chain.helper';\nimport { div } from 'prelude-ls';\n\nfunction App() {\n  const { chain } = useSelector(state => state.blockchain)\n\n  return (\n    <div>\n      <div className={`h-10 ${ChainHelper.isValidChain(chain) ? 'bg-green-500' : 'bg-red-500'}`}></div>\n      <div className=\"container pt-10 mx-auto px-4\">\n        <div className=\"grid md:grid-cols-3 xl:grid-cols-4 gap-4\">\n          <section className=\"md:col-span-2 xl:col-span-3\">\n            <Chain />\n          </section>\n          <div>\n          <section>\n            <Wallets />\n          </section>\n          <section>\n            <CreateTransactions />\n          </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import BlockHelper from \"../../helpers/block.helper\"\nimport TransactionHelper from \"../../helpers/transaction.helper\"\nimport { ADD_TRANSACTION, CHANGE_DIFFICULTY, CHANGE_REWARD, MINE, UPDATE_BLOCK, UPDATE_TX } from \"./types\"\nconst INITIAL_REWARD= 100\nconst initialState = {\n  chain: [BlockHelper.createGenesisBlock(INITIAL_REWARD)],\n  difficulty: 2,\n  pendingTransactions: [],\n  miningReward: INITIAL_REWARD\n}\n\nconst reducer = (state = initialState, action) => {\n  let chain\n  switch (action.type) {\n    case CHANGE_DIFFICULTY: \n      return {\n        ...state,\n        difficulty: action.payload\n      }\n    case CHANGE_REWARD: \n      return {\n        ...state,\n        miningReward: action.payload\n      }\n    case UPDATE_BLOCK:\n      chain = [...state.chain]\n      chain.splice(action.payload.index, 1, action.payload.block)\n      return {\n        ...state,\n        chain\n      }\n    case ADD_TRANSACTION: \n      let { payload: tx } = action\n      if (\n        !tx.fromAddress.publicKey ||\n        !tx.toAddress.privateKey\n      )\n        throw new Error('Transaction must include from and to address')\n\n      if (!TransactionHelper.isValid(tx))\n        throw new Error('Cannot add invalid transaction to chain')\n      return {\n        ...state,\n        pendingTransactions: [...state.pendingTransactions, tx]\n      }\n    case MINE:\n      return {\n        ...state,\n        pendingTransactions: [],\n        chain: [...state.chain, action.payload]\n      }\n    case UPDATE_TX:\n      chain = [...state.chain]\n      let block = {...chain[action.payload.blockIndex]}\n      block.transactions.splice(action.payload.txIndex, 1, action.payload.tx)\n      let newBlock = {\n        ...block,\n        //hash: BlockHelper.calculateHash(block.timestamp, block.transactions, block.previousHash, block.nonce)\n      }\n      chain.splice(action.payload.blockIndex, 1, newBlock)\n      return {\n        ...state,\n        chain\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import reducers from './reducers'\nexport default reducers","import WalletHelper from \"../../helpers/wallet.helper\";\nimport { ADD_WALLET } from \"./types\";\n\nconst initialState = {\n  wallets: [WalletHelper.getSatoshi(), WalletHelper.createRandomWallet(), WalletHelper.createRandomWallet()]\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_WALLET:\n      let wallet = WalletHelper.createRandomWallet()\n      return {\n        ...state,\n        wallets: [...state.wallets, wallet]\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import reducers from './reducers'\nexport default reducers","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport blockchain from './blockchain'\nimport wallets from './wallets'\nimport thunk from 'redux-thunk'\nconst reducers = combineReducers({\n  blockchain,\n  wallets\n})\nexport default createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux'\nimport { Provider } from 'react-redux'\n// import WorkerContext from './contexts/mine.worker'\n// const minerWorker = new Worker('/blockchain/mine.worker.js', { type: module })\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <WorkerContext.Provider value={minerWorker}> */}\n      <Provider store={store}>\n        <App />\n      </Provider>\n    {/* </WorkerContext.Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}