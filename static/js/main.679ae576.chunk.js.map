{"version":3,"sources":["redux/blockchain/types.js","redux/blockchain/actions.js","helpers/utils.js","helpers/transaction.helper.js","data/color.palette.js","helpers/color.helper.js","helpers/wallet.helper.js","helpers/block.helper.js","helpers/chain.helper.js","components/Wallet.jsx","components/ValidationTag.jsx","components/EditableTransactions.jsx","hooks/wallet.hooks.js","components/Block.jsx","contexts/mine.worker.js","components/Transactions.jsx","components/PendingTransactions.jsx","components/Chain.jsx","redux/wallets/types.js","components/Wallets.jsx","redux/wallets/actions.js","components/CreateTransactions.jsx","App.js","reportWebVitals.js","redux/blockchain/reducers.js","redux/blockchain/index.js","redux/wallets/reducers.js","redux/wallets/index.js","redux/index.js","index.js"],"names":["CHANGE_DIFFICULTY","CHANGE_REWARD","UPDATE_BLOCK","UPDATE_TX","ADD_TRANSACTION","MINE","SET_MINING","updateBlock","index","block","type","payload","updateTransaction","blockIndex","txIndex","tx","setMining","status","generateId","Math","random","toString","substr","EC","ec","TransactionHelper","from","to","amount","id","fromAddress","toAddress","signature","fromPublicKey","toPublicKey","SHA256","owner","publicKey","Error","hashTx","this","calculateHash","key","keyFromPrivate","privateKey","sig","sign","toDER","length","keyFromPublic","verify","colorPalette","ColorHelper","hexadecimalColor","color","substring","rgb","parseInt","floor","str","hash","i","charCodeAt","c","hashCode","toUpperCase","satoshiKey","genKeyPair","satoshi","name","textColor","getPublic","getPrivate","WalletHelper","getColorFromColorPalette","faker","firstName","isBright","getSatoshi","BlockHelper","timestamp","transactions","previousHash","nonce","difficulty","Array","fill","join","miningReward","createBlock","Date","toISOString","split","createTx","JSON","stringify","every","isValid","chain","hasValidTransactions","ChainHelper","latestBlockHash","pendingTx","miner","rewardTX","push","mineBlock","address","balance","parseFloat","findIndex","slice","Wallet","wallet","withAmount","useSelector","state","blockchain","getBalance","useCallback","getBalanceOfAddress","getValidChain","className","style","backgroundColor","ValidationTag","valid","icon","faCheck","faTimes","EditableTransactions","ADDRESS_TYPE","dispatch","useDispatch","wallets","selectOptions","map","value","useWalletOptions","handleSelect","property","target","newTX","find","w","getWallet","getColor","intToRGB","onChange","e","min","newTx","handleAmount","Block","handleInput","isNumber","newBlock","isValidBlock","parsedHash","blockColor","borderColor","htmlFor","WorkerContext","createContext","Transactions","renderTransactions","PendingTX","pendingTransactions","mining","useState","opened","setOpened","setMiner","worker","useContext","stop","stopPropagation","handleMine","minerWallet","postMessage","getLatestBlock","onmessage","a","console","log","data","handleSelectMiner","renderNumber","onClick","faAngleUp","faAngleDown","spin","faSpinner","disabled","Chain","renderBlocks","isValidChain","changeDifficulty","reward","ADD_WALLET","Wallets","renderWallets","renderWalletPill","CreateTransactions","setFrom","setTo","setAmount","error","setError","setter","clean","validate","fromTx","toTx","renderSelectOptions","step","parsedAmount","errors","signTx","addTransaction","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","createGenesisBlock","reducers","action","splice","createRandomWallet","combineReducers","createStore","composeWithDevTools","applyMiddleware","logger","thunk","minerWorker","Worker","ReactDOM","render","StrictMode","Provider","store","document","getElementById"],"mappings":"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","file":"static/js/main.679ae576.chunk.js","sourcesContent":["export const CHANGE_DIFFICULTY = 'CHANGE_DIFFICULTY'\nexport const CHANGE_REWARD = 'CHANGE_REWARD'\nexport const UPDATE_BLOCK = 'UPDATE_BLOCK'\nexport const UPDATE_TX = 'UPDATE_TX'\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION'\nexport const MINE = 'MINE'\nexport const SET_MINING = 'SET_MINING'","import { ADD_TRANSACTION, CHANGE_DIFFICULTY, CHANGE_REWARD, MINE, SET_MINING, UPDATE_BLOCK, UPDATE_TX } from \"./types\"\n\nexport const changeDifficulty = (difficulty) => {\n  return {\n    type: CHANGE_DIFFICULTY,\n    payload: difficulty\n  }\n}\n\nexport const changeReward = (reward) => {\n  return {\n    type: CHANGE_REWARD,\n    payload: reward\n  }\n}\n\nexport const updateBlock = (index, block) => {\n  return {\n    type: UPDATE_BLOCK,\n    payload: {\n      index,\n      block\n    }\n  }\n}\n\nexport const addTransaction = (tx) => {\n  return {\n    type: ADD_TRANSACTION,\n    payload: tx\n  }\n}\n\nexport const updateTransaction = (blockIndex, txIndex, tx) => {\n  return {\n    type: UPDATE_TX,\n    payload: {\n      blockIndex,\n      txIndex,\n      tx\n    }\n  }\n}\n\nexport const mine = (block) => {\n  return {\n    type: MINE,\n    payload: block\n  }\n}\n\nexport const setMining = (status) => {\n  return {\n    type: SET_MINING,\n    payload: status\n  }\n}","export const generateId = () => Math.random().toString(36).substr(2, 9)\nexport const debounce = (fn, time) => {\n  let timeoutId\n  return (...args) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    console.log(timeoutId)\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      console.log('saving')\n      //fn(...args)\n    }, time)\n  }\n}","import { SHA256 } from 'crypto-js'\nimport { generateId } from './utils'\nimport { ec } from 'elliptic'\nconst EC = new ec('secp256k1')\n\nclass TransactionHelper {\n  static createTx (from, to, amount, id = null) {\n    return {\n      id: id || generateId(),\n      fromAddress: from,\n      toAddress: to,\n      amount,\n      signature: ''\n    }\n  }\n  static calculateHash(fromPublicKey, toPublicKey, amount) {\n    return SHA256(fromPublicKey + toPublicKey + amount).toString()\n  }\n  static signTx(tx, owner) {\n    if (owner.publicKey !== tx.fromAddress.publicKey)\n      throw new Error('You cannot sign transactions for other wallets')\n    const hashTx = this.calculateHash(tx.fromAddress.publicKey, tx.toAddress.publicKey, tx.amount)\n    const key = EC.keyFromPrivate(owner.privateKey, 'hex')\n    const sig = EC.sign(hashTx, key)\n    tx.signature = sig.toDER('hex')\n  }\n\n  static isValid(tx) {\n      if (tx.fromAddress === null) return true\n      if (!tx.signature || tx.signature.length === 0)\n        throw new Error('No signature in this transaction')\n      const publicKey = EC.keyFromPublic(\n        tx.fromAddress.publicKey,\n        'hex'\n      )\n      const hashTx = this.calculateHash(tx.fromAddress.publicKey, tx.toAddress.publicKey, tx.amount)\n      return publicKey.verify(hashTx, tx.signature)\n  }\n}\n\nexport default TransactionHelper","export const colorPalette = [\n  '#F44336',\n  '#FFEBEE',\n  '#FFCDD2',\n  '#EF9A9A',\n  '#E57373',\n  '#EF5350',\n  '#E53935',\n  '#D32F2F',\n  '#C62828',\n  '#B71C1C',\n  '#FF8A80',\n  '#FF5252',\n  '#FF1744',\n  '#D50000',\n  '#FCE4EC',\n  '#F8BBD0',\n  '#F48FB1',\n  '#F06292',\n  '#EC407A',\n  '#E91E63',\n  '#D81B60',\n  '#C2185B',\n  '#AD1457',\n  '#880E4F',\n  '#FF80AB',\n  '#FF4081',\n  '#F50057',\n  '#C51162',\n  '#F3E5F5',\n  '#E1BEE7',\n  '#CE93D8',\n  '#BA68C8',\n  '#AB47BC',\n  '#9C27B0',\n  '#8E24AA',\n  '#7B1FA2',\n  '#6A1B9A',\n  '#4A148C',\n  '#EA80FC',\n  '#E040FB',\n  '#D500F9',\n  '#AA00FF',\n  '#EDE7F6',\n  '#D1C4E9',\n  '#B39DDB',\n  '#9575CD',\n  '#7E57C2',\n  '#673AB7',\n  '#5E35B1',\n  '#512DA8',\n  '#4527A0',\n  '#311B92',\n  '#B388FF',\n  '#7C4DFF',\n  '#651FFF',\n  '#6200EA',\n  '#E8EAF6',\n  '#C5CAE9',\n  '#9FA8DA',\n  '#7986CB',\n  '#5C6BC0',\n  '#3F51B5',\n  '#3949AB',\n  '#303F9F',\n  '#283593',\n  '#1A237E',\n  '#8C9EFF',\n  '#536DFE',\n  '#3D5AFE',\n  '#304FFE',\n  '#E3F2FD',\n  '#BBDEFB',\n  '#90CAF9',\n  '#64B5F6',\n  '#42A5F5',\n  '#2196F3',\n  '#1E88E5',\n  '#1976D2',\n  '#1565C0',\n  '#0D47A1',\n  '#82B1FF',\n  '#448AFF',\n  '#2979FF',\n  '#2962FF',\n  '#E1F5FE',\n  '#B3E5FC',\n  '#81D4FA',\n  '#4FC3F7',\n  '#29B6F6',\n  '#03A9F4',\n  '#039BE5',\n  '#0288D1',\n  '#0277BD',\n  '#01579B',\n  '#80D8FF',\n  '#40C4FF',\n  '#00B0FF',\n  '#0091EA',\n  '#E0F7FA',\n  '#B2EBF2',\n  '#80DEEA',\n  '#4DD0E1',\n  '#26C6DA',\n  '#00BCD4',\n  '#00ACC1',\n  '#0097A7',\n  '#00838F',\n  '#006064',\n  '#84FFFF',\n  '#18FFFF',\n  '#00E5FF',\n  '#00B8D4',\n  '#E0F2F1',\n  '#B2DFDB',\n  '#80CBC4',\n  '#4DB6AC',\n  '#26A69A',\n  '#009688',\n  '#00897B',\n  '#00796B',\n  '#00695C',\n  '#004D40',\n  '#A7FFEB',\n  '#64FFDA',\n  '#1DE9B6',\n  '#00BFA5',\n  '#E8F5E9',\n  '#C8E6C9',\n  '#A5D6A7',\n  '#81C784',\n  '#66BB6A',\n  '#4CAF50',\n  '#43A047',\n  '#388E3C',\n  '#2E7D32',\n  '#1B5E20',\n  '#B9F6CA',\n  '#69F0AE',\n  '#00E676',\n  '#00C853',\n  '#F1F8E9',\n  '#DCEDC8',\n  '#C5E1A5',\n  '#AED581',\n  '#9CCC65',\n  '#8BC34A',\n  '#7CB342',\n  '#689F38',\n  '#558B2F',\n  '#33691E',\n  '#CCFF90',\n  '#B2FF59',\n  '#76FF03',\n  '#64DD17',\n  '#F9FBE7',\n  '#F0F4C3',\n  '#E6EE9C',\n  '#DCE775',\n  '#D4E157',\n  '#CDDC39',\n  '#C0CA33',\n  '#AFB42B',\n  '#9E9D24',\n  '#827717',\n  '#F4FF81',\n  '#EEFF41',\n  '#C6FF00',\n  '#AEEA00',\n  '#FFFDE7',\n  '#FFF9C4',\n  '#FFF59D',\n  '#FFF176',\n  '#FFEE58',\n  '#FFEB3B',\n  '#FDD835',\n  '#FBC02D',\n  '#F9A825',\n  '#F57F17',\n  '#FFFF8D',\n  '#FFFF00',\n  '#FFEA00',\n  '#FFD600',\n  '#FFF8E1',\n  '#FFECB3',\n  '#FFE082',\n  '#FFD54F',\n  '#FFCA28',\n  '#FFC107',\n  '#FFB300',\n  '#FFA000',\n  '#FF8F00',\n  '#FF6F00',\n  '#FFE57F',\n  '#FFD740',\n  '#FFC400',\n  '#FFAB00',\n  '#FFF3E0',\n  '#FFE0B2',\n  '#FFCC80',\n  '#FFB74D',\n  '#FFA726',\n  '#FF9800',\n  '#FB8C00',\n  '#F57C00',\n  '#EF6C00',\n  '#E65100',\n  '#FFD180',\n  '#FFAB40',\n  '#FF9100',\n  '#FF6D00',\n  '#FBE9E7',\n  '#FFCCBC',\n  '#FFAB91',\n  '#FF8A65',\n  '#FF7043',\n  '#FF5722',\n  '#F4511E',\n  '#E64A19',\n  '#D84315',\n  '#BF360C',\n  '#FF9E80',\n  '#FF6E40',\n  '#FF3D00',\n  '#DD2C00',\n  '#EFEBE9',\n  '#D7CCC8',\n  '#BCAAA4',\n  '#A1887F',\n  '#8D6E63',\n  '#795548',\n  '#6D4C41',\n  '#5D4037',\n  '#4E342E',\n  '#3E2723',\n  '#FAFAFA',\n  '#F5F5F5',\n  '#EEEEEE',\n  '#E0E0E0',\n  '#BDBDBD',\n  '#9E9E9E',\n  '#757575',\n  '#616161',\n  '#424242',\n  '#212121',\n  '#ECEFF1',\n  '#CFD8DC',\n  '#B0BEC5',\n  '#90A4AE',\n  '#78909C',\n  '#607D8B',\n  '#546E7A',\n  '#455A64',\n  '#37474F',\n  '#263238',\n  '#000000']","import { colorPalette } from '../data/color.palette'\nexport default class ColorHelper {\n  static isBright(hexadecimalColor) {\n    const color = hexadecimalColor.substring(1) // strip #\n    const rgb = parseInt(color, 16) // convert rrggbb to decimal\n    const r = (rgb >> 16) & 0xff // extract red\n    const g = (rgb >> 8) & 0xff // extract green\n    const b = (rgb >> 0) & 0xff // extract blue\n\n    const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b // per ITU-R BT.709\n\n    if (luma < 80) {\n      return false\n    }\n    return true\n  }\n  static getRandomHexadecimalColor() {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`\n  }\n  static getColorFromColorPalette() {\n    return colorPalette[Math.floor(Math.random() * 100000) % colorPalette.length]\n  }\n  static hashCode(str) { // java String#hashCode\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n       hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n  } \n\n  static intToRGB(i) {\n    let str = this.hashCode(i)\n    var c = (str & 0x00FFFFFF)\n        .toString(16)\n        .toUpperCase();\n\n    return \"#\"+\"00000\".substring(0, 6 - c.length) + c;\n  }\n}\n","import { ec } from 'elliptic'\nimport faker from 'faker'\nimport ColorHelper from './color.helper'\nconst EC = new ec('secp256k1')\nconst satoshiKey = EC.genKeyPair()\nconst satoshi = {\n  name: 'Satoshi',\n  color: '#ff0066',\n  textColor: 'white',\n  publicKey: satoshiKey.getPublic('hex'),\n  privateKey: satoshiKey.getPrivate('hex')\n}\n\nexport default class WalletHelper {\n\n  static createRandomWallet() {\n    let key = EC.genKeyPair()\n    let color = ColorHelper.getColorFromColorPalette()\n    let publicKey = key.getPublic('hex')\n    let privateKey = key.getPrivate('hex')\n    return {\n      name: faker.name.firstName(),\n      color,\n      textColor: ColorHelper.isBright(color) ? 'black' : 'white',\n      publicKey,\n      privateKey,\n    }\n  }\n  static getSatoshi = () => satoshi\n}\n","import { SHA256 } from 'crypto-js'\nimport TransactionHelper from './transaction.helper'\nimport { generateId } from './utils'\nimport WalletHelper from './wallet.helper'\n\nclass BlockHelper {\n  // All the info need to create a block in our chain, in this step we change data with a transactions array per each block\n\n  static createBlock(timestamp, transactions, previousHash = '') {\n    return {\n      id: generateId(),\n      timestamp,\n      transactions,\n      previousHash,\n      nonce: 0,\n      hash: this.calculateHash(timestamp, transactions, previousHash, 0)\n    }\n  }\n  \n  // Getting the hash with the amount of 0 based on the difficulty\n  static mineBlock(block, difficulty) {\n\n    let { timestamp, transactions, previousHash } = block\n    while (block.hash.substring(0, difficulty) !== Array(difficulty).fill(0).join('')) {\n      block.nonce++\n      block.hash = this.calculateHash(timestamp, transactions, previousHash, block.nonce)\n    }\n  }\n\n  static createGenesisBlock(miningReward) {\n    let block = this.createBlock(new Date().toISOString().split('T')[0], [TransactionHelper.createTx(null, WalletHelper.getSatoshi(), miningReward)], '')\n    return block\n  }\n  // Method that calculates the hash of the block\n  static calculateHash(timestamp, transactions, previousHash, nonce) {\n    return SHA256(timestamp + JSON.stringify(transactions) + previousHash + nonce).toString()\n  }\n\n  static hasValidTransactions(block) {\n    return block.transactions.every(tx => TransactionHelper.isValid(tx))\n  }\n  static isValid(block, chain, index) {\n    if (!this.hasValidTransactions(block)) return false\n      // ensure that the hash info of the current block is ok and hasn't been modified\n      if (block.hash !== this.calculateHash(block.timestamp, block.transactions, block.previousHash, block.nonce)) return false\n      if(index === 0) return true\n      // checking that the prevous block information is ok\n      let { timestamp, transactions, previousHash, nonce } = chain[index - 1]\n      if (block.previousHash !== this.calculateHash(timestamp, transactions, previousHash, nonce)) return false\n      if (!this.isValid(chain[index - 1], chain, index - 1)) return false\n      return true\n  }\n}\n\nexport default BlockHelper","import BlockHelper from \"./block.helper\"\nimport TransactionHelper from \"./transaction.helper\"\n\nclass ChainHelper {\n  static mine(latestBlockHash, pendingTx, miningReward, difficulty, miner) {\n    // Adding the miner Tx to the pending ones to get the reward\n    const rewardTX = TransactionHelper.createTx(null, miner, miningReward)\n    pendingTx.push(rewardTX)\n    // Creating a block containing the pending transactions\n    const block = BlockHelper.createBlock(new Date().toISOString().split('T')[0], pendingTx, latestBlockHash)\n    BlockHelper.mineBlock(block, difficulty)\n    return block\n  }\n\n  static getLatestBlock(chain) {\n    return chain[chain.length - 1]\n  }\n\n  static getBalanceOfAddress(chain, address) {\n    let balance = 0\n    // Looping all blocks\n    for (const block of chain) {\n      // Looping all transactions inside a block\n      for(const tx of block.transactions) {\n        // If you are the sender, the total amount have to decrease\n        if(tx.fromAddress?.publicKey === address) balance -= parseFloat(tx.amount)\n        // If you are the receiver, the total amount have to increase\n        if(tx.toAddress?.publicKey === address) balance += parseFloat(tx.amount)\n      }\n    }\n    return balance\n  }\n\n  static isValidChain(chain) {\n    // Analyzes each block (the genesis shouldn't be analyzed) comparing the store information of the previous block with the current information of the previousblock, recalculating the hash\n    return chain.every((block, index) => BlockHelper.isValid(block, chain, index))\n  }\n\n  static getValidChain(chain) {\n    let index = chain.findIndex((block, i) => !BlockHelper.isValid(block, chain, i))\n    if (index === -1) return chain\n    return chain.slice(0, index)\n  }\n}\n\nexport default ChainHelper","import { useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport ChainHelper from './../helpers/chain.helper'\n\nconst Wallet = ({ wallet, withAmount = false }) => {\n  const { chain } = useSelector(state => state.blockchain)\n\nconst getBalance = useCallback(() => ChainHelper.getBalanceOfAddress(ChainHelper.getValidChain(chain), wallet.publicKey), [wallet, chain])\n\n  return (\n    <div className=\"cursor-pointer\">\n      { !wallet ?  <span className=\"py-1 px-2 rounded-md bg-gray-500 text-white\">Blockchain</span>\n        :\n      <span \n      style={{backgroundColor: wallet.color, color: wallet.textColor}}\n      className=\"rounded-md flex items-center\">\n        <div className=\"px-2\">\n          {wallet.name}\n        </div>\n        { withAmount ?\n          <div className=\"px-2 text-black bg-white rounded-r-md -m-1\">\n            {getBalance()}\n          </div>\n          :\n          null\n        }\n      </span>\n    }\n    </div>\n  )\n}\n\nexport default Wallet","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\nconst ValidationTag = ({valid}) => {\n  return (\n    <div className=\"text-white font-bold\">\n      { valid ?\n        <div className=\"bg-green-500 px-2 rounded\"><FontAwesomeIcon icon={faCheck} /> VALID</div>\n        :\n        <div className=\"bg-red-500 px-2 rounded\"><FontAwesomeIcon icon={faTimes} /> INVALID</div>}\n    </div>\n  )\n}\n\nexport default ValidationTag","import Wallet from './Wallet'\nimport { useWalletOptions } from './../hooks/wallet.hooks'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateTransaction } from '../redux/blockchain/actions'\nimport ColorHelper from '../helpers/color.helper'\nimport TransactionHelper from '../helpers/transaction.helper'\nimport ValidationTag from './ValidationTag'\nconst EditableTransactions = ({transactions, blockIndex}) => {\n  const ADDRESS_TYPE = {\n    FROM: 'fromAddress',\n    TO: 'toAddress'\n  }\n  const dispatch = useDispatch()\n  const { wallets } = useSelector(state => state.wallets)\n  const selectOptions = useWalletOptions(wallets)\n  // handlers\n  const handleSelect = (property, index, tx, { target: { value }}) => {\n    let newTX = {...tx}\n    const getWallet = (value) => wallets.find(w => w.publicKey === value)\n    newTX[property] = getWallet(value)\n    dispatch(updateTransaction(blockIndex, index, newTX))\n  }\n\n  const handleAmount = (index, tx, {target: { value }}) => {\n    const newTx = {\n      ...tx,\n      amount: parseFloat(value)\n    }\n    dispatch(updateTransaction(blockIndex, index, newTx))\n  }\n\n  //methods\n  const getColor = (hash) => ColorHelper.intToRGB(hash.substring(0,10))\n  // renders\n  const renderTransactions = () => {\n    return transactions.map((tx, i) => {\n      const { fromAddress, toAddress, signature } = tx\n      const hash = TransactionHelper.calculateHash(fromAddress ? fromAddress.publicKey : null, toAddress.publicKey, tx.amount)\n      return (<div className=\"flex items-center my-1 md:my-2 flex-wrap px-1 py-1 bg-gray-200 rounded justify-between\" key={tx.id}>\n        { fromAddress ?\n        <select name=\"from\" id=\"from\" value={fromAddress.publicKey} onChange={(e) => handleSelect(ADDRESS_TYPE.FROM, i, tx, e)}>\n            { selectOptions } \n        </select>\n        :\n        <Wallet wallet={fromAddress} />\n        }\n        <div className=\"mx-2 hidden md:block\">sends</div>\n        <div>\n          <input className=\"w-14 md:w-28\" type=\"number\" min=\"0\" value={tx.amount} onChange={(e) => handleAmount(i, tx, e)}/>\n        </div>\n        <div className=\"mx-2 hidden md:block\">to</div>\n        <select name=\"from\" id=\"from\" value={toAddress.publicKey} onChange={(e) => handleSelect(ADDRESS_TYPE.TO, i, tx, e)}>\n            { selectOptions } \n        </select>\n        <div className=\"whitespace-nowrap overflow-hidden overflow-ellipsis\">\n            <span className=\"mx-2 font-bold\">Tx Hash: </span>\n            <span className=\"rounded px-2 text-white\" style={{backgroundColor: getColor(hash.substring(0,10))}} >{hash.substring(0,10)}...</span>\n        </div>\n        {\n          signature !== '' ?\n          (<div className=\"whitespace-nowrap overflow-hidden overflow-ellipsis\">\n            <span className=\"mx-2 font-bold\">Sig: </span>\n            <span className=\"rounded px-2 text-white\" style={{backgroundColor: getColor(signature.substring(0,10))}} >{signature.substring(0,10)}...</span>\n          </div>)\n          :\n          null\n        }\n        <div className=\"flex-1 flex justify-end\">\n          { <ValidationTag valid={TransactionHelper.isValid(tx)} /> }\n        </div>\n      </div>)\n    })\n  }\n\n  return (\n    <div className=\"\">\n      { renderTransactions() }\n    </div>)\n}\n\nexport default EditableTransactions","export const useWalletOptions = (wallets) => {\n  return wallets.map(({publicKey, name })=> (<option key={publicKey} value={publicKey}>{name}</option>))\n}","import { useDispatch, useSelector } from \"react-redux\"\nimport { updateBlock } from \"../redux/blockchain/actions\"\nimport EditableTransactions from './EditableTransactions'\nimport ValidationTag from './ValidationTag'\nimport ColorHelper from \"../helpers/color.helper\"\nimport BlockHelper from \"../helpers/block.helper\"\nimport { useCallback } from \"react\"\n\n\nconst Block = ({ index, block }) => {\n  const { chain } = useSelector(state => state.blockchain)\n  const { hash, nonce, previousHash, timestamp, transactions} = block\n  const dispatch = useDispatch()\n  // handlers\n  const handleInput = (property, {target: { value }}, isNumber = false) => {\n    let newBlock = {\n      ...block,\n      [property]: !isNumber ? value : parseFloat(value),\n    }\n    dispatch(updateBlock(\n      index,\n      {\n        ...newBlock,\n        //hash: BlockHelper.calculateHash(newBlock.timestamp, newBlock.transactions, newBlock.previousHash, newBlock.nonce)\n      }))\n  }\n  const isValidBlock = useCallback(() => BlockHelper.isValid(block, chain, index), [block, chain, index])\n\n  const parsedHash = useCallback(() => BlockHelper.calculateHash(timestamp, transactions, previousHash, nonce), [timestamp, transactions, previousHash, nonce])\n  const blockColor = useCallback(() => ColorHelper.intToRGB(parsedHash()), [parsedHash])\n  //renders\n  const renderBlock = () => {\n    return (\n      <div style={{borderColor: blockColor()}} className=\"rounded bg-gray-100 shadow p-2 border-t-8 md:border-0\">\n        <div className=\"uppercase font-bold mb-2 text-lg md:hidden\">{index === 0 ? 'Genesis Block' : `Block ${index}`}</div>\n        <div className=\"flex mb-2 rounded justify-between\">\n          <p className=\"max-w-xs whitespace-nowrap overflow-hidden overflow-ellipsis\">\n            <span className=\"mr-2 font-bold\">Current Hash: </span>\n            <span className=\"rounded px-2 text-white\" style={{backgroundColor: blockColor()}} >{parsedHash().substring(0,10)}...</span>\n          </p>\n          <div>\n            <ValidationTag valid={isValidBlock()} />\n          </div>\n        </div>\n        <div className=\"flex mb-2\">\n          <label className=\"mr-2 font-bold\" htmlFor=\"nonce\">Hash</label>\n          <input className=\"flex-1 pl-2\" value={hash} onChange={(e) => handleInput('hash', e)} type=\"text\"/>\n        </div>\n        { previousHash ?\n        <div className=\"flex mb-2 items-center\">\n          <label className=\"font-bold\" htmlFor=\"previousHash\">Previous hash</label>\n          <div style={{backgroundColor: ColorHelper.intToRGB(previousHash)}} className=\"mx-2 w-5 h-5 rounded\"></div>\n          <input className=\"flex-1 pl-2\" value={previousHash} onChange={(e) => handleInput('previousHash', e)} type=\"text\"/>\n        </div>\n        : null\n        }\n        <div className=\"flex mb-2\">\n          <label className=\"mr-2 font-bold\" htmlFor=\"nonce\">Nonce</label>\n          <input className=\"flex-1 pl-2\" value={nonce} onChange={(e) => handleInput('nonce', e, true)} type=\"number\" min=\"0\"/>\n        </div>\n        <div className=\"flex mb-2\">\n          <label className=\"mr-2 font-bold\" htmlFor=\"hash\">Timestamp</label>\n          <input className=\"flex-1 pl-2\" value={ timestamp } onChange={(e) => handleInput('timestamp', e)} type=\"date\"/>\n        </div>\n        {transactions.length ? \n          <div>\n          <p className=\"font-bold\">Transactions:</p>\n          <EditableTransactions transactions={transactions} blockIndex={index}/>\n        </div>\n        : null\n        }\n      </div>\n    )\n  }\n\n\n  return (\n    <div className=\"flex\">\n      <div style={{borderColor: blockColor()}} className={`border-l-8 w-10 rounded shadow px-2 py-4 mr-4 hidden md:block ${BlockHelper.isValid(block, chain, index) ? 'bg-gray-200' : 'bg-red-500 text-white'}`}>\n        <p className=\"font-bold ml-5 uppercase transform origin-top-left rotate-90 absolute\">{index === 0 ? 'Genesis Block' : `Block ${index}`}</p>\n      </div>\n      <div className=\"flex-1\">\n        { renderBlock() }\n      </div>\n    </div>\n  )\n}\nexport default Block","import { createContext } from 'react'\n\nconst WorkerContext = createContext()\nexport default WorkerContext","import { useCallback } from 'react'\nimport Wallet from './Wallet'\nconst Transactions = ({transactions}) => {\n\n  // renders\n  const renderTransactions = useCallback(() => {\n    return transactions.map(tx => {\n      const { fromAddress, toAddress } = tx\n      return (<div className=\"flex items-center my-2\" key={tx.id}>\n        <Wallet wallet={fromAddress} />\n        <div className=\"mx-2\">sends { tx.amount } to </div>\n        <Wallet wallet={toAddress} />\n      </div>)\n    })\n  }, [transactions])\n\n  return (\n    <div className=\"px-2 py-2\">\n      { renderTransactions() }\n    </div>)\n}\n\nexport default Transactions","import { useContext, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ChainHelper from './../helpers/chain.helper'\nimport WorkerContext from './../contexts/mine.worker'\nimport { mine, setMining } from \"../redux/blockchain/actions\"\nimport Transactions from './Transactions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner, faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons'\n\nconst PendingTX = () => {\n  const dispatch = useDispatch()\n  const { pendingTransactions, chain, miningReward, difficulty, mining } = useSelector(state => state.blockchain)\n  const { wallets } = useSelector(state => state.wallets)\n  const [opened, setOpened] = useState(false)\n  const [miner, setMiner] = useState('')\n  const worker = useContext(WorkerContext)\n\n  //handlers\n  const stop = (e) => {\n    e.stopPropagation()\n  }\n  const handleMine = (e) => {\n    dispatch(setMining(true))\n    const minerWallet = wallets.find(wallet => wallet.publicKey === miner)\n    worker.postMessage({ pendingTx: pendingTransactions, miner: minerWallet, miningReward, difficulty, latestBlockHash: ChainHelper.getLatestBlock(chain).hash });\n    worker.onmessage = async (e) => {\n      console.log('reached data', e.data)\n      dispatch(mine(e.data))\n      dispatch(setMining(false))\n    }\n    setMiner('')\n    stop(e)\n  }\n  const handleSelectMiner = ({ target: { value }}) => setMiner(value)\n\n  // renders\n  const renderMiner = () => {\n    return mining ? \n    (<div className=\"mr-4\">Mining <FontAwesomeIcon spin icon={faSpinner} /></div>)\n    :\n    (<div>\n      <label className=\"mr-2\" htmlFor=\"miner\">Miner:</label>\n      <select className=\"w-48 py-1\" value={miner} onChange={handleSelectMiner} onClick={stop} name=\"miner\" id=\"miner\">\n        <option value=\"\">Select an addr</option>\n        { wallets.map(({ publicKey, name }) => (<option key={publicKey} value={publicKey}>{name}</option>))}\n      </select>\n      <button disabled={miner === ''} onClick={handleMine} className=\"py-1 px-2 mx-2 rounded text-white bg-gray-500 hover:bg-gray-600 disavled:hover:bg-gray-500 disabled:opacity-30 disabled:cursor-not-allowed\">Mine ⛏️</button>\n    </div>)\n  }\n\n  const renderNumber = () => {\n    return <span className=\"flex justify-center items-center w-5 h-5 rounded-full text-white bg-red-500\">{pendingTransactions.length}</span>\n  }\n\n  const renderTitle = () => {\n    return !pendingTransactions.length ?\n      <h2 className=\"font-bold px-2 py-3\">No Pending Transactions</h2> :\n      (<div className=\"px-2 py-2 md:flex items-center cursor-pointer hover:bg-gray-200 justify-between rounded-t\" onClick={() => setOpened(!opened)}>\n          <h2 className=\"font-bold flex-1 flex mb-4 md:mb-0\">\n            <p className=\"font-bold text-center w-5\">{opened ? <FontAwesomeIcon icon={faAngleUp} /> : <FontAwesomeIcon icon={faAngleDown} />}</p>\n            <p>Pending Transactions: </p>\n            <p className=\"md:hidden flex-1 flex justify-end\">{ renderNumber() }</p>\n          </h2>\n          <div className=\"flex\">{ renderMiner() }</div>\n          <div className=\"hidden md:block\">{ renderNumber() }</div>\n        </div>\n      )\n  }\n  \n  const renderTransactions = () => {\n    if (!opened) return\n    return <Transactions transactions={pendingTransactions} />\n  }\n\n  return (\n    <div className=\"rounded bg-gray-100 shadow\">\n      { renderTitle() }\n      { renderTransactions() }\n    </div>\n  )\n}\n\nexport default PendingTX","import { useDispatch, useSelector } from \"react-redux\"\nimport { changeDifficulty, changeReward } from \"../redux/blockchain/actions\"\n//import mineWorker from './../workers/mine.worker'\nimport Block from './Block'\nimport ValidationTag from './ValidationTag'\nimport PendingTX from \"./PendingTransactions\"\nimport ChainHelper from \"../helpers/chain.helper\"\nimport { useCallback } from \"react\"\nconst Chain = () => {\n  //state\n  const { difficulty, miningReward, chain } = useSelector(state => state.blockchain)\n  const dispatch = useDispatch()\n\n  //handlers\n  const handleDifficulty = ({ target: { value }}) => {\n    dispatch(changeDifficulty(parseInt(value === '' ? 0 : value)))\n  }\n  const handleMiningReward = ({ target: { value }}) => {\n    dispatch(changeReward(parseFloat(value === '' ? 0 : value)))\n  }\n\n  //renders\n  const renderBlocks = useCallback(() => {\n    return chain.map((block, index) => <div className=\"mb-4\" key={block.id}><Block block={block} index={index}></Block></div>)\n  }, [chain])\n\n  // methods\n  const isValidChain = useCallback(() => ChainHelper.isValidChain(chain), [chain])\n\n  return (\n    <div>\n      <div className=\"flex items-center mb-4\">\n        <h1 className=\"font-bold text-2xl mr-4\">Blockchain</h1>\n        <ValidationTag valid={isValidChain()}/>\n      </div>\n      <div className=\"flex justify-between mb-4\">\n        <div>\n          <label className=\"mr-4\"htmlFor=\"difficulty\">Difficulty: </label>\n          <input className=\"border border-grey-100 pl-2 w-20\" min=\"0\"  value={difficulty} type=\"number\" onChange={handleDifficulty}/>\n          {difficulty > 5 ? (<p className=\"text-sm text-red-500\">A difficulty higher than 5 will take a long time to mine</p>) : null}\n        </div>\n        <div>\n        <label className=\"mr-4\" htmlFor=\"difficulty\">Mining Reward: </label>\n          <input className=\"border border-grey-100 pl-2\" value={miningReward} type=\"number\" onChange={handleMiningReward} min=\"1\"/>\n        </div>\n      </div>\n      <div className=\"mb-4\">\n        <PendingTX />\n      </div>\n      <div>\n        { renderBlocks() }\n      </div>\n    </div>\n  )\n}\nexport default Chain","const ADD_WALLET = 'ADD_WALLET'\n\nexport { ADD_WALLET }","import Wallet from './Wallet'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { createWallet } from \"../redux/wallets/actions\"\nimport { useCallback } from 'react'\nconst Wallets = () => {\n  const dispatch = useDispatch()\n  const { wallets } = useSelector(state => state.wallets)\n  // renders\n  const renderWallets = useCallback(() => {\n    if (!wallets.length) return <p className=\"py-1\">There are no wallets yet</p>\n    return wallets.map(wallet => renderWalletPill(wallet))\n  }, [wallets])\n\n  const renderWalletPill = (wallet) => {\n    return (\n      <div className=\"m-1 cursor-pointer flex items-center\" key={wallet.publicKey}>\n        <Wallet wallet={wallet} withAmount={true}/>\n      </div>\n    )\n  }\n\n  // handlers\n  const handleCreateWallet = () => {\n    dispatch(createWallet())\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"font-bold text-xl flex-1\">Wallets</h2>\n        <button onClick={handleCreateWallet} className=\"py-1 px-4 rounded bg-gray-500 text-white focus:outline-none hover:bg-gray-600\">Create</button>\n      </div>\n      <div className=\"p-4 rounded bg-gray-100 w-full\">\n        <div className=\"flex flex-wrap\">\n        { renderWallets() }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Wallets","import { ADD_WALLET } from \"./types\"\n\nexport const createWallet = () => {\n  return {\n    type: ADD_WALLET\n  }\n}","import { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ChainHelper from \"../helpers/chain.helper\"\nimport TransactionHelper from \"../helpers/transaction.helper\"\nimport { addTransaction } from \"../redux/blockchain/actions\"\n\nconst CreateTransactions = () => {\n  const dispatch = useDispatch()\n  //local state\n  const [from, setFrom] = useState('')\n  const [to, setTo] = useState('')\n  const [amount, setAmount] = useState(0)\n  const [error, setError] = useState('')\n  // redux\n  const { wallets } = useSelector(state => state.wallets)\n  const { chain, pendingTransactions, mining } = useSelector(state => state.blockchain)\n  //handlers\n  const handleInput = (setter, { target: { value }}) => {\n    setter(value)\n    setError('')\n  }\n  const handleAddTransaction = () => {\n    let fromTx = wallets.find(wallet => wallet.publicKey === from)\n    let toTx = wallets.find(wallet => wallet.publicKey === to)\n    let parsedAmount = parseFloat(amount)\n    let errors = validate(fromTx, toTx, parsedAmount)\n    if (!errors) {\n      let tx = TransactionHelper.createTx(fromTx, toTx, parseFloat(amount))\n      TransactionHelper.signTx(tx, fromTx)\n      dispatch(addTransaction(tx))\n      clean()\n    }\n    else {\n      setError(errors)\n      console.error(errors)\n    }\n  }\n\n  //methods\n  const clean = () => {\n    setFrom('')\n    setTo('')\n    setAmount(0)\n  }\n\n  const validate = (fromTx, toTx, amount) => {\n    if (amount <= 0) return 'Amount should be higher than 0'\n    let fromFunds = ChainHelper.getBalanceOfAddress([...chain, {transactions: pendingTransactions}], from)\n    if (fromFunds < amount) return `Insuficient funds of ${fromTx.name}`\n    if (fromTx.publicKey === toTx.publicKey) return 'From and To cannot be the same wallet'\n  }\n\n  //renders\n  const renderSelectOptions = () => {\n    return wallets.map(({publicKey, name })=> (<option key={publicKey} value={publicKey}>{name}</option>))\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <h2 className=\"font-bold text-xl mb-4\">Transactions</h2>\n      <div className=\"p-4 rounded bg-gray-100 w-full shadow\">\n        <div className=\"flex mb-2\">\n          <label className=\"font-bold mr-2\" htmlFor=\"from\">From Address: </label>\n          <select className=\"flex-1\" name=\"from\" id=\"from\" value={from} onChange={(e) => handleInput(setFrom, e)}>\n            <option>Select an addr</option>\n            {renderSelectOptions() } \n          </select>\n        </div>\n        <div className=\"flex mb-2\">\n          <label className=\"font-bold mr-2\" htmlFor=\"to\">To Address: </label>\n          <select className=\"flex-1\" name=\"to\" id=\"to\" value={to} onChange={(e) => handleInput(setTo, e)}>\n            <option>Select an addr</option>\n            {renderSelectOptions() } \n          </select>\n        </div>\n        <div className=\"flex\">\n          <label className=\"font-bold mr-2\" htmlFor=\"from\">Amount: </label>\n          <input className=\"flex-1\" value={amount} onChange={(e) => handleInput(setAmount, e)} type=\"number\" step=\"10\" min=\"0\"/>\n        </div>\n        <div className=\"h-8 flex items-center text-red-400\">\n          { error }\n        </div>\n        <button\n          disabled={!amount || from === '' || to === '' || mining} \n          onClick={handleAddTransaction} className=\"w-full py-1 px-4 rounded bg-gray-500 text-white focus:outline-none hover:bg-gray-600 disabled:bg-gray-200 disabled:cursor-not-allowed\">{ mining ? 'Mining...' : 'Create Tx'}</button>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateTransactions","import Chain from './components/Chain'\nimport Wallets from './components/Wallets'\nimport CreateTransactions from './components/CreateTransactions'\nimport { useSelector } from 'react-redux';\nimport ChainHelper from './helpers/chain.helper';\n\nfunction App() {\n  const { chain } = useSelector(state => state.blockchain)\n\n  return (\n    <div>\n      <div className={`h-10 ${ChainHelper.isValidChain(chain) ? 'bg-green-500' : 'bg-red-500'}`}></div>\n      <div className=\"max-w-7xl pt-5 mx-auto px-2\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          <section className=\"md:col-span-2 xl:col-span-3\">\n            <Chain />\n          </section>\n          <div className=\"md:grid md:grid-cols-2 lg:grid-cols-1 gap-4 right-col\">\n            <section>\n              <Wallets />\n            </section>\n            <section>\n              <CreateTransactions />\n            </section>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import BlockHelper from \"../../helpers/block.helper\"\nimport TransactionHelper from \"../../helpers/transaction.helper\"\nimport { ADD_TRANSACTION, CHANGE_DIFFICULTY, CHANGE_REWARD, MINE, UPDATE_BLOCK, UPDATE_TX, SET_MINING } from \"./types\"\nconst INITIAL_REWARD= 100\nconst initialState = {\n  chain: [BlockHelper.createGenesisBlock(INITIAL_REWARD)],\n  difficulty: 2,\n  pendingTransactions: [],\n  miningReward: INITIAL_REWARD,\n  mining: false\n}\n\nconst reducer = (state = initialState, action) => {\n  let chain\n  switch (action.type) {\n    case CHANGE_DIFFICULTY: \n      return {\n        ...state,\n        difficulty: action.payload\n      }\n    case CHANGE_REWARD: \n      return {\n        ...state,\n        miningReward: action.payload\n      }\n    case UPDATE_BLOCK:\n      chain = [...state.chain]\n      chain.splice(action.payload.index, 1, action.payload.block)\n      return {\n        ...state,\n        chain\n      }\n    case ADD_TRANSACTION: \n      let { payload: tx } = action\n      if (\n        !tx.fromAddress.publicKey ||\n        !tx.toAddress.privateKey\n      )\n        throw new Error('Transaction must include from and to address')\n\n      if (!TransactionHelper.isValid(tx))\n        throw new Error('Cannot add invalid transaction to chain')\n      return {\n        ...state,\n        pendingTransactions: [...state.pendingTransactions, tx]\n      }\n    case MINE:\n      return {\n        ...state,\n        pendingTransactions: [],\n        chain: [...state.chain, action.payload]\n      }\n    case SET_MINING: \n      return {\n        ...state,\n        mining: action.payload\n      }\n    case UPDATE_TX:\n      chain = [...state.chain]\n      let block = {...chain[action.payload.blockIndex]}\n      block.transactions.splice(action.payload.txIndex, 1, action.payload.tx)\n      let newBlock = {\n        ...block,\n        //hash: BlockHelper.calculateHash(block.timestamp, block.transactions, block.previousHash, block.nonce)\n      }\n      chain.splice(action.payload.blockIndex, 1, newBlock)\n      return {\n        ...state,\n        chain\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import reducers from './reducers'\nexport default reducers","import WalletHelper from \"../../helpers/wallet.helper\";\nimport { ADD_WALLET } from \"./types\";\n\nconst initialState = {\n  wallets: [WalletHelper.getSatoshi(), WalletHelper.createRandomWallet(), WalletHelper.createRandomWallet()]\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_WALLET:\n      let wallet = WalletHelper.createRandomWallet()\n      return {\n        ...state,\n        wallets: [...state.wallets, wallet]\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import reducers from './reducers'\nexport default reducers","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport blockchain from './blockchain'\nimport wallets from './wallets'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nconst reducers = combineReducers({\n  blockchain,\n  wallets\n})\nexport default createStore(reducers, composeWithDevTools(applyMiddleware(logger, thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux'\nimport { Provider } from 'react-redux'\nimport WorkerContext from './contexts/mine.worker'\nconst minerWorker = new Worker('/blockchain/mine.worker.js')\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <WorkerContext.Provider value={minerWorker}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </WorkerContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}