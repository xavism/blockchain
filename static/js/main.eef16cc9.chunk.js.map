{"version":3,"sources":["redux/blockchain/types.js","redux/blockchain/actions.js","helpers/utils.js","helpers/transaction.helper.js","data/color.palette.js","helpers/color.helper.js","helpers/wallet.helper.js","helpers/block.helper.js","helpers/chain.helper.js","components/Wallet.jsx","components/Transactions.jsx","components/Block.jsx","components/PendingTransactions.jsx","components/Chain.jsx","redux/wallets/types.js","components/Wallets.jsx","redux/wallets/actions.js","components/CreateTransactions.jsx","App.js","reportWebVitals.js","redux/blockchain/reducers.js","redux/blockchain/index.js","redux/wallets/reducers.js","redux/wallets/index.js","redux/index.js","index.js"],"names":["CHANGE_DIFFICULTY","CHANGE_REWARD","UPDATE_BLOCK","ADD_TRANSACTION","MINE","updateBlock","index","block","type","payload","generateId","Math","random","toString","substr","EC","ec","TransactionHelper","from","to","amount","id","fromAddress","toAddress","signature","fromPublicKey","toPublicKey","SHA256","tx","owner","publicKey","Error","hashTx","this","calculateHash","key","keyFromPrivate","privateKey","sig","sign","toDER","length","keyFromPublic","verify","colorPalette","ColorHelper","hexadecimalColor","color","substring","rgb","parseInt","floor","satoshiKey","genKeyPair","satoshi","name","textColor","getPublic","getPrivate","WalletHelper","getColorFromColorPalette","faker","firstName","isBright","getSatoshi","BlockHelper","timestamp","transactions","previousHash","nonce","hash","difficulty","Array","fill","join","miningReward","createBlock","Date","toISOString","split","push","createTx","JSON","stringify","every","isValid","ChainHelper","latestBlockHash","pendingTx","miner","rewardTX","mineBlock","chain","address","balance","parseFloat","Wallet","wallet","withAmount","useSelector","state","blockchain","className","style","backgroundColor","getBalanceOfAddress","Transactions","wallets","getWallet","find","w","map","Block","dispatch","useDispatch","handleInput","property","value","target","isNumber","htmlFor","onChange","e","min","PendingTX","pendingTransactions","useState","opened","setOpened","setMiner","stop","stopPropagation","handleMine","minerWallet","mine","getLatestBlock","handleSelectMiner","onClick","disabled","renderTransactions","Chain","max","changeDifficulty","reward","ADD_WALLET","Wallets","renderWalletPill","CreateTransactions","setFrom","setTo","setAmount","error","setError","setter","clean","renderSelectOptions","step","fromTx","toTx","parsedAmount","fromFunds","signTx","addTransaction","console","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","createGenesisBlock","reducers","action","splice","createRandomWallet","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"2PAAaA,EAAoB,oBACpBC,EAAgB,gBAChBC,EAAe,eACfC,EAAkB,kBAClBC,EAAO,OCYPC,EAAc,SAACC,EAAOC,GACjC,MAAO,CACLC,KAAMN,EACNO,QAAS,CACPH,QACAC,W,gDCrBOG,EAAa,kBAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,I,QCG/DC,EAAK,IAAIC,KAAG,aAqCHC,E,6FAlCb,SAAiBC,EAAMC,EAAIC,GACzB,MAAO,CACLC,GAAIX,IACJY,YAAaJ,EACbK,UAAWJ,EACXC,SACAI,UAAW,M,2BAGf,SAAqBC,EAAeC,EAAaN,GAC/C,OAAOO,iBAAOF,EAAgBC,EAAcN,GAAQP,a,oBAEtD,SAAce,EAAIC,GAChB,GAAIA,EAAMC,YAAcF,EAAGN,YAAYQ,UACrC,MAAM,IAAIC,MAAM,kDAClB,IAAMC,EAASC,KAAKC,cAAcN,EAAGN,YAAYQ,UAAWF,EAAGL,UAAUO,UAAWF,EAAGR,QACjFe,EAAMpB,EAAGqB,eAAeP,EAAMQ,WAAY,OAC1CC,EAAMvB,EAAGwB,KAAKP,EAAQG,GAC5BP,EAAGJ,UAAYc,EAAIE,MAAM,S,qBAG3B,SAAeZ,GACX,GAAuB,OAAnBA,EAAGN,YAAsB,OAAO,EACpC,IAAKM,EAAGJ,WAAqC,IAAxBI,EAAGJ,UAAUiB,OAChC,MAAM,IAAIV,MAAM,oCAClB,IAAMD,EAAYf,EAAG2B,cACnBd,EAAGN,YAAYQ,UACf,OAEIE,EAASC,KAAKC,cAAcN,EAAGN,YAAYQ,UAAWF,EAAGL,UAAUO,UAAWF,EAAGR,QACvF,OAAOU,EAAUa,OAAOX,EAAQJ,EAAGJ,e,uBCpC5BoB,EAAe,CAC1B,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WC9PmBC,E,6FACnB,SAAgBC,GACd,IAAMC,EAAQD,EAAiBE,UAAU,GACnCC,EAAMC,SAASH,EAAO,IAO5B,QAFa,OAJFE,GAAO,GAAM,KAIE,OAHfA,GAAO,EAAK,KAGgB,OAF5BA,GAAO,EAAK,KAIZ,M,uCAKb,WACE,MAAM,IAAN,OAAWtC,KAAKwC,MAAsB,SAAhBxC,KAAK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","file":"static/js/main.eef16cc9.chunk.js","sourcesContent":["export const CHANGE_DIFFICULTY = 'CHANGE_DIFFICULTY'\nexport const CHANGE_REWARD = 'CHANGE_REWARD'\nexport const UPDATE_BLOCK = 'UPDATE_BLOCK'\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION'\nexport const MINE = 'MINE'","import { ADD_TRANSACTION, CHANGE_DIFFICULTY, CHANGE_REWARD, MINE, UPDATE_BLOCK } from \"./types\"\n\nexport const changeDifficulty = (difficulty) => {\n  return {\n    type: CHANGE_DIFFICULTY,\n    payload: difficulty\n  }\n}\n\nexport const changeReward = (reward) => {\n  return {\n    type: CHANGE_REWARD,\n    payload: reward\n  }\n}\n\nexport const updateBlock = (index, block) => {\n  return {\n    type: UPDATE_BLOCK,\n    payload: {\n      index,\n      block\n    }\n  }\n}\n\nexport const addTransaction = (tx) => {\n  return {\n    type: ADD_TRANSACTION,\n    payload: tx\n  }\n}\n\nexport const mine = (block) => {\n  return {\n    type: MINE,\n    payload: block\n  }\n}","export const generateId = () => Math.random().toString(36).substr(2, 9)\nexport const debounce = (fn, time) => {\n  let timeoutId\n  return (...args) => {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    console.log(timeoutId)\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      console.log('saving')\n      //fn(...args)\n    }, time)\n  }\n}","import { SHA256 } from 'crypto-js'\nimport { generateId } from './utils'\nimport { ec } from 'elliptic'\nconst EC = new ec('secp256k1')\n\nclass TransactionHelper {\n  static createTx (from, to, amount) {\n    return {\n      id: generateId(),\n      fromAddress: from,\n      toAddress: to,\n      amount,\n      signature: ''\n    }\n  }\n  static calculateHash(fromPublicKey, toPublicKey, amount) {\n    return SHA256(fromPublicKey + toPublicKey + amount).toString()\n  }\n  static signTx(tx, owner) {\n    if (owner.publicKey !== tx.fromAddress.publicKey)\n      throw new Error('You cannot sign transactions for other wallets')\n    const hashTx = this.calculateHash(tx.fromAddress.publicKey, tx.toAddress.publicKey, tx.amount)\n    const key = EC.keyFromPrivate(owner.privateKey, 'hex')\n    const sig = EC.sign(hashTx, key)\n    tx.signature = sig.toDER('hex')\n  }\n\n  static isValid(tx) {\n      if (tx.fromAddress === null) return true\n      if (!tx.signature || tx.signature.length === 0)\n        throw new Error('No signature in this transaction')\n      const publicKey = EC.keyFromPublic(\n        tx.fromAddress.publicKey,\n        'hex'\n      )\n      const hashTx = this.calculateHash(tx.fromAddress.publicKey, tx.toAddress.publicKey, tx.amount)\n      return publicKey.verify(hashTx, tx.signature)\n  }\n}\n\nexport default TransactionHelper","export const colorPalette = [\n  '#F44336',\n  '#FFEBEE',\n  '#FFCDD2',\n  '#EF9A9A',\n  '#E57373',\n  '#EF5350',\n  '#E53935',\n  '#D32F2F',\n  '#C62828',\n  '#B71C1C',\n  '#FF8A80',\n  '#FF5252',\n  '#FF1744',\n  '#D50000',\n  '#FCE4EC',\n  '#F8BBD0',\n  '#F48FB1',\n  '#F06292',\n  '#EC407A',\n  '#E91E63',\n  '#D81B60',\n  '#C2185B',\n  '#AD1457',\n  '#880E4F',\n  '#FF80AB',\n  '#FF4081',\n  '#F50057',\n  '#C51162',\n  '#F3E5F5',\n  '#E1BEE7',\n  '#CE93D8',\n  '#BA68C8',\n  '#AB47BC',\n  '#9C27B0',\n  '#8E24AA',\n  '#7B1FA2',\n  '#6A1B9A',\n  '#4A148C',\n  '#EA80FC',\n  '#E040FB',\n  '#D500F9',\n  '#AA00FF',\n  '#EDE7F6',\n  '#D1C4E9',\n  '#B39DDB',\n  '#9575CD',\n  '#7E57C2',\n  '#673AB7',\n  '#5E35B1',\n  '#512DA8',\n  '#4527A0',\n  '#311B92',\n  '#B388FF',\n  '#7C4DFF',\n  '#651FFF',\n  '#6200EA',\n  '#E8EAF6',\n  '#C5CAE9',\n  '#9FA8DA',\n  '#7986CB',\n  '#5C6BC0',\n  '#3F51B5',\n  '#3949AB',\n  '#303F9F',\n  '#283593',\n  '#1A237E',\n  '#8C9EFF',\n  '#536DFE',\n  '#3D5AFE',\n  '#304FFE',\n  '#E3F2FD',\n  '#BBDEFB',\n  '#90CAF9',\n  '#64B5F6',\n  '#42A5F5',\n  '#2196F3',\n  '#1E88E5',\n  '#1976D2',\n  '#1565C0',\n  '#0D47A1',\n  '#82B1FF',\n  '#448AFF',\n  '#2979FF',\n  '#2962FF',\n  '#E1F5FE',\n  '#B3E5FC',\n  '#81D4FA',\n  '#4FC3F7',\n  '#29B6F6',\n  '#03A9F4',\n  '#039BE5',\n  '#0288D1',\n  '#0277BD',\n  '#01579B',\n  '#80D8FF',\n  '#40C4FF',\n  '#00B0FF',\n  '#0091EA',\n  '#E0F7FA',\n  '#B2EBF2',\n  '#80DEEA',\n  '#4DD0E1',\n  '#26C6DA',\n  '#00BCD4',\n  '#00ACC1',\n  '#0097A7',\n  '#00838F',\n  '#006064',\n  '#84FFFF',\n  '#18FFFF',\n  '#00E5FF',\n  '#00B8D4',\n  '#E0F2F1',\n  '#B2DFDB',\n  '#80CBC4',\n  '#4DB6AC',\n  '#26A69A',\n  '#009688',\n  '#00897B',\n  '#00796B',\n  '#00695C',\n  '#004D40',\n  '#A7FFEB',\n  '#64FFDA',\n  '#1DE9B6',\n  '#00BFA5',\n  '#E8F5E9',\n  '#C8E6C9',\n  '#A5D6A7',\n  '#81C784',\n  '#66BB6A',\n  '#4CAF50',\n  '#43A047',\n  '#388E3C',\n  '#2E7D32',\n  '#1B5E20',\n  '#B9F6CA',\n  '#69F0AE',\n  '#00E676',\n  '#00C853',\n  '#F1F8E9',\n  '#DCEDC8',\n  '#C5E1A5',\n  '#AED581',\n  '#9CCC65',\n  '#8BC34A',\n  '#7CB342',\n  '#689F38',\n  '#558B2F',\n  '#33691E',\n  '#CCFF90',\n  '#B2FF59',\n  '#76FF03',\n  '#64DD17',\n  '#F9FBE7',\n  '#F0F4C3',\n  '#E6EE9C',\n  '#DCE775',\n  '#D4E157',\n  '#CDDC39',\n  '#C0CA33',\n  '#AFB42B',\n  '#9E9D24',\n  '#827717',\n  '#F4FF81',\n  '#EEFF41',\n  '#C6FF00',\n  '#AEEA00',\n  '#FFFDE7',\n  '#FFF9C4',\n  '#FFF59D',\n  '#FFF176',\n  '#FFEE58',\n  '#FFEB3B',\n  '#FDD835',\n  '#FBC02D',\n  '#F9A825',\n  '#F57F17',\n  '#FFFF8D',\n  '#FFFF00',\n  '#FFEA00',\n  '#FFD600',\n  '#FFF8E1',\n  '#FFECB3',\n  '#FFE082',\n  '#FFD54F',\n  '#FFCA28',\n  '#FFC107',\n  '#FFB300',\n  '#FFA000',\n  '#FF8F00',\n  '#FF6F00',\n  '#FFE57F',\n  '#FFD740',\n  '#FFC400',\n  '#FFAB00',\n  '#FFF3E0',\n  '#FFE0B2',\n  '#FFCC80',\n  '#FFB74D',\n  '#FFA726',\n  '#FF9800',\n  '#FB8C00',\n  '#F57C00',\n  '#EF6C00',\n  '#E65100',\n  '#FFD180',\n  '#FFAB40',\n  '#FF9100',\n  '#FF6D00',\n  '#FBE9E7',\n  '#FFCCBC',\n  '#FFAB91',\n  '#FF8A65',\n  '#FF7043',\n  '#FF5722',\n  '#F4511E',\n  '#E64A19',\n  '#D84315',\n  '#BF360C',\n  '#FF9E80',\n  '#FF6E40',\n  '#FF3D00',\n  '#DD2C00',\n  '#EFEBE9',\n  '#D7CCC8',\n  '#BCAAA4',\n  '#A1887F',\n  '#8D6E63',\n  '#795548',\n  '#6D4C41',\n  '#5D4037',\n  '#4E342E',\n  '#3E2723',\n  '#FAFAFA',\n  '#F5F5F5',\n  '#EEEEEE',\n  '#E0E0E0',\n  '#BDBDBD',\n  '#9E9E9E',\n  '#757575',\n  '#616161',\n  '#424242',\n  '#212121',\n  '#ECEFF1',\n  '#CFD8DC',\n  '#B0BEC5',\n  '#90A4AE',\n  '#78909C',\n  '#607D8B',\n  '#546E7A',\n  '#455A64',\n  '#37474F',\n  '#263238',\n  '#000000']","import { colorPalette } from '../data/color.palette'\nexport default class ColorHelper {\n  static isBright(hexadecimalColor) {\n    const color = hexadecimalColor.substring(1) // strip #\n    const rgb = parseInt(color, 16) // convert rrggbb to decimal\n    const r = (rgb >> 16) & 0xff // extract red\n    const g = (rgb >> 8) & 0xff // extract green\n    const b = (rgb >> 0) & 0xff // extract blue\n\n    const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b // per ITU-R BT.709\n\n    if (luma < 80) {\n      return false\n    }\n    return true\n  }\n  static getRandomHexadecimalColor() {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`\n  }\n  static getColorFromColorPalette() {\n    return colorPalette[Math.floor(Math.random() * 100000) % colorPalette.length]\n  }\n}\n","import { ec } from 'elliptic'\nimport faker from 'faker'\nimport ColorHelper from './color.helper'\nconst EC = new ec('secp256k1')\nconst satoshiKey = EC.genKeyPair()\nconst satoshi = {\n  name: 'Satoshi',\n  color: '#ff0066',\n  textColor: 'white',\n  publicKey: satoshiKey.getPublic('hex'),\n  privateKey: satoshiKey.getPrivate('hex')\n}\n\nexport default class WalletHelper {\n\n  static createRandomWallet() {\n    let key = EC.genKeyPair()\n    let color = ColorHelper.getColorFromColorPalette()\n    let publicKey = key.getPublic('hex')\n    let privateKey = key.getPrivate('hex')\n    return {\n      name: faker.name.firstName(),\n      color,\n      textColor: ColorHelper.isBright(color) ? 'black' : 'white',\n      publicKey,\n      privateKey,\n    }\n  }\n  static getSatoshi = () => satoshi\n}\n","import { SHA256 } from 'crypto-js'\nimport TransactionHelper from './transaction.helper'\nimport { generateId } from './utils'\nimport WalletHelper from './wallet.helper'\n\nclass BlockHelper {\n  // All the info need to create a block in our chain, in this step we change data with a transactions array per each block\n\n  static createBlock(timestamp, transactions, previousHash = '') {\n    return {\n      id: generateId(),\n      timestamp,\n      transactions,\n      previousHash,\n      nonce: 0,\n      hash: this.calculateHash(timestamp, transactions, previousHash, 0)\n    }\n  }\n  \n  // Getting the hash with the amount of 0 based on the difficulty\n  static mineBlock(block, difficulty) {\n    let { timestamp, transactions, previousHash } = block\n    while (block.hash.substring(0, difficulty) !== Array(difficulty).fill(0).join('')) {\n      block.nonce++\n      block.hash = this.calculateHash(timestamp, transactions, previousHash, block.nonce)\n    }\n  }\n\n  static createGenesisBlock(miningReward) {\n    let block = this.createBlock(new Date().toISOString().split('T')[0], [], '0')\n    block.transactions.push(TransactionHelper.createTx(null, WalletHelper.getSatoshi(), miningReward))\n    return block\n  }\n  // Method that calculates the hash of the block\n  static calculateHash(timestamp, transactions, previousHash, nonce) {\n    return SHA256(timestamp + JSON.stringify(transactions) + previousHash + nonce).toString()\n  }\n\n  static hasValidTransactions(transactions) {\n    return transactions.every(tx => tx.isValid())\n  }\n}\n\nexport default BlockHelper","import BlockHelper from \"./block.helper\"\nimport TransactionHelper from \"./transaction.helper\"\n\nclass ChainHelper {\n  static mine(latestBlockHash, pendingTx, miningReward, difficulty, miner) {\n    // Adding the miner Tx to the pending ones to get the reward\n    const rewardTX = TransactionHelper.createTx(null, miner, miningReward)\n    pendingTx.push(rewardTX)\n    // Creating a block containing the pending transactions\n    const block = BlockHelper.createBlock(new Date().toISOString().split('T')[0], pendingTx, latestBlockHash)\n    BlockHelper.mineBlock(block, difficulty)\n    return block\n  }\n\n  static getLatestBlock(chain) {\n    return chain[chain.length - 1]\n  }\n\n  static getBalanceOfAddress(chain, address) {\n    let balance = 0\n    // Looping all blocks\n    for (const block of chain) {\n      // Looping all transactions inside a block\n      for(const tx of block.transactions) {\n        // If you are the sender, the total amount have to decrease\n        if(tx.fromAddress?.publicKey === address) balance -= parseFloat(tx.amount)\n        // If you are the receiver, the total amount have to increase\n        if(tx.toAddress?.publicKey === address) balance += parseFloat(tx.amount)\n      }\n    }\n\n    return balance\n  }\n\n}\n\nexport default ChainHelper","import { useSelector } from 'react-redux'\nimport ChainHelper from './../helpers/chain.helper'\n\nconst Wallet = ({ wallet, withAmount = false }) => {\n  const { chain } = useSelector(state => state.blockchain)\n\n  return (\n    <div className=\"cursor-pointer\">\n      { !wallet ?  <span className=\"py-1 px-2 rounded-md bg-gray-500 text-white\">Blockchain</span>\n        :\n      <span \n      style={{backgroundColor: wallet.color, color: wallet.textColor}}\n      className=\"rounded-md flex items-center\">\n        <div className=\"px-2\">\n          {wallet.name}\n        </div>\n        { withAmount ?\n          <div className=\"px-2 text-black bg-white rounded-r-md -m-1\">\n            {ChainHelper.getBalanceOfAddress(chain, wallet.publicKey)}\n          </div>\n          :\n          null\n        }\n      </span>\n    }\n    </div>\n  )\n}\n\nexport default Wallet","import Wallet from './Wallet'\nimport { useSelector } from 'react-redux'\nconst Transactions = ({transactions}) => {\n\n  const { wallets } = useSelector(state => state.wallets)\n\n  // getter\n  const getWallet = (wallet) => !wallet ? null : wallets.find(w => w.publicKey === wallet.publicKey)\n\n  return (\n    <div className=\"px-2 py-2\">\n      { transactions.map(tx => {\n        const from = getWallet(tx.fromAddress)\n        const to = getWallet(tx.toAddress)\n        return (<div className=\"flex items-center my-2\" key={tx.id}>\n          <Wallet wallet={from} />\n          <div className=\"mx-2\">sends { tx.amount } to </div>\n          <Wallet wallet={to} />\n        </div>)\n      }) }\n    </div>)\n}\n\nexport default Transactions","import { useDispatch } from \"react-redux\"\nimport { updateBlock } from \"../redux/blockchain/actions\"\nimport { SHA256 } from 'crypto-js'\nimport Transactions from './Transactions'\nconst Block = ({ index, block }) => {\n  const { hash, nonce, previousHash, timestamp, transactions} = block\n  const dispatch = useDispatch()\n  // handlers\n  const handleInput = (property, {target: { value }}, isNumber = false) => {\n    dispatch(updateBlock(\n      index,\n      {\n      ...block,\n      [property]: !isNumber ? value : parseFloat(value),\n      hash: SHA256(timestamp + JSON.stringify(transactions) + previousHash + nonce).toString()\n    }))\n  }\n  //renders\n  const renderBlock = () => {\n    return (\n      <div className=\"\">\n        <div className=\"flex mb-2\">\n          <p><span className=\"mr-2 font-bold\">Hash: </span>{hash}</p>\n        </div>\n        <div className=\"flex mb-2\">\n          <label className=\"mr-2 font-bold\" htmlFor=\"nonce\">Nonce</label>\n          <input className=\"flex-1 pl-2\" value={nonce} onChange={(e) => handleInput('nonce', e, true)} type=\"number\" min=\"0\"/>\n        </div>\n        <div className=\"flex mb-2\">\n          <label className=\"mr-2 font-bold\" htmlFor=\"previousHash\">Previous hash</label>\n          <input className=\"flex-1 pl-2\" value={previousHash} onChange={(e) => handleInput('previousHash', e)} type=\"text\"/>\n        </div>\n        <div className=\"flex\">\n          <label className=\"mr-2 font-bold\" htmlFor=\"hash\">Timestamp</label>\n          <input className=\"flex-1 pl-2\" value={ timestamp } onChange={(e) => handleInput('timestamp', e)} type=\"date\"/>\n        </div>\n        {transactions.length ? \n          <div>\n          <p className=\"font-bold\">Transactions:</p>\n          <Transactions transactions={transactions} />\n        </div>\n        : null\n        }\n      </div>\n    )\n  }\n\n\n  return (\n    <div className=\"flex\">\n      <div className=\"w-10 rounded bg-gray-200 shadow px-2 py-4 mr-4\">\n        <p className=\"font-bold ml-6 uppercase transform origin-top-left rotate-90 absolute\">{index === 0 ? 'Genesis Block' : `Block ${index}`}</p>\n      </div>\n      <div className=\"rounded bg-gray-100 shadow px-2 py-4 flex-1\">\n        { renderBlock() }\n      </div>\n    </div>\n  )\n}\nexport default Block","import { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ChainHelper from './../helpers/chain.helper'\n//import WorkerContext from './../contexts/mine.worker'\nimport { mine } from \"../redux/blockchain/actions\"\nimport Transactions from './Transactions'\nconst PendingTX = () => {\n  const dispatch = useDispatch()\n  const { pendingTransactions, chain, miningReward, difficulty } = useSelector(state => state.blockchain)\n  const { wallets } = useSelector(state => state.wallets)\n  const [opened, setOpened] = useState(false)\n  const [miner, setMiner] = useState('')\n  //const worker = useContext(WorkerContext)\n\n  //handlers\n  const stop = (e) => {\n    e.stopPropagation()\n  }\n  const handleMine = (e) => {\n    // debugger\n    // const minerWorker = new Worker()\n    const minerWallet = wallets.find(wallet => wallet.publicKey === miner)\n    // NEEDS A WORKER!!\n    let block = ChainHelper.mine(ChainHelper.getLatestBlock(chain).hash, pendingTransactions, miningReward, difficulty, minerWallet)\n    dispatch(mine(block))\n    //worker.postMessage({ pendingTx: pendingTransactions, minerAddress: miner, miningReward, difficulty, latestBlockHash: ChainHelper.getLatestBlock(chain).hash });\n\n    // worker.onmessage = (e) => {\n    //   console.log('reached data')\n    //   dispatch(mine(e.data));\n    // }\n    stop(e)\n  }\n  const handleSelectMiner = ({ target: { value }}) => setMiner(value)\n\n  // renders\n  const renderMiner = () => {\n    return (<div>\n      <label className=\"mr-2\" htmlFor=\"miner\">Miner:</label>\n      <select className=\"w-48\" value={miner} onChange={handleSelectMiner} onClick={stop} name=\"miner\" id=\"miner\">\n        <option value=\"\">Select an addr</option>\n        { wallets.map(({ publicKey, name }) => (<option key={publicKey} value={publicKey}>{name}</option>))}\n      </select>\n      <button disabled={miner === ''} onClick={handleMine} className=\"py-1 px-2 mx-2 rounded text-white bg-gray-500 hover:bg-gray-600\">Mine ⛏️</button>\n    </div>)\n  }\n\n  const renderTitle = () => {\n    return !pendingTransactions.length ?\n      <h2 className=\"font-bold px-2 py-3\">No Pending Transactions</h2> :\n      (<div className=\" px-2 py-2 flex items-center cursor-pointer hover:bg-gray-200 justify-between rounded-t\" onClick={() => setOpened(!opened)}>\n          <h2 className=\"font-bold flex-1 flex\"><p className=\"font-bold text-center w-5\">{opened ? '-' : '+'}</p>Pending Transactions: </h2>\n          <div>{ renderMiner() }</div>\n          <span className=\"ml-5 flex justify-center items-center w-5 h-5 rounded-full text-white bg-red-500\">{pendingTransactions.length}</span>\n        </div>\n      )\n  }\n  \n  const renderTransactions = () => {\n    if (!opened) return\n    return <Transactions transactions={pendingTransactions} />\n  }\n\n  return (\n    <div className=\"rounded bg-gray-100 shadow\">\n      { renderTitle() }\n      { renderTransactions() }\n    </div>\n  )\n}\n\nexport default PendingTX","import { useDispatch, useSelector } from \"react-redux\"\nimport { changeDifficulty, changeReward } from \"../redux/blockchain/actions\"\n//import mineWorker from './../workers/mine.worker'\nimport Block from './Block'\nimport PendingTX from \"./PendingTransactions\"\nconst Chain = () => {\n  //state\n  const { difficulty, miningReward, chain } = useSelector(state => state.blockchain)\n  const dispatch = useDispatch()\n\n  //handlers\n  const handleDifficulty = ({ target: { value }}) => {\n    dispatch(changeDifficulty(parseInt(value)))\n  }\n  const handleMiningReward = ({ target: { value }}) => {\n    dispatch(changeReward(parseFloat(value)))\n  }\n\n  //renders\n  const renderBlocks = () => {\n    return chain.map((block, index) => <div className=\"mb-4\" key={block.id}><Block block={block} index={index}></Block></div>)\n  }\n\n  return (\n    <div>\n      <h1 className=\"font-bold text-2xl mb-4\">Blockchain</h1>\n      <div className=\"flex justify-between mb-4\">\n        <div>\n          <label className=\"mr-4\"htmlFor=\"difficulty\">Difficulty: </label>\n          <input className=\"border border-grey-100 pl-2 w-20\" min=\"0\" max=\"3\"  value={difficulty} type=\"number\" onChange={handleDifficulty}/>\n        </div>\n        <div>\n        <label className=\"mr-4\" htmlFor=\"difficulty\">Mining Reward: </label>\n          <input className=\"border border-grey-100 pl-2\" value={miningReward} type=\"number\" onChange={handleMiningReward} min=\"1\"/>\n        </div>\n      </div>\n      <div className=\"mb-4\">\n        <PendingTX />\n      </div>\n      <div>\n        { renderBlocks() }\n      </div>\n    </div>\n  )\n}\nexport default Chain","const ADD_WALLET = 'ADD_WALLET'\n\nexport { ADD_WALLET }","import Wallet from './Wallet'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { createWallet } from \"../redux/wallets/actions\"\nconst Wallets = () => {\n  const dispatch = useDispatch()\n  const { wallets } = useSelector(state => state.wallets)\n  // renders\n  const renderWallets = () => {\n    if (!wallets.length) return <p className=\"py-1\">There are no wallets yet</p>\n    return wallets.map(wallet => renderWalletPill(wallet))\n  }\n\n  const renderWalletPill = (wallet) => {\n    return (\n      <div className=\"m-1 cursor-pointer flex items-center\" key={wallet.publicKey}>\n        <Wallet wallet={wallet} withAmount={true}/>\n      </div>\n    )\n  }\n\n  // handlers\n  const handleCreateWallet = () => {\n    dispatch(createWallet())\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"font-bold text-xl flex-1\">Wallets</h2>\n        <button onClick={handleCreateWallet} className=\"py-1 px-4 rounded bg-gray-500 text-white focus:outline-none hover:bg-gray-600\">Create</button>\n      </div>\n      <div className=\"p-4 rounded bg-gray-100 w-full\">\n        <div className=\"flex flex-wrap\">\n        { renderWallets() }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Wallets","import { ADD_WALLET } from \"./types\"\n\nexport const createWallet = () => {\n  return {\n    type: ADD_WALLET\n  }\n}","import { useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ChainHelper from \"../helpers/chain.helper\"\nimport TransactionHelper from \"../helpers/transaction.helper\"\nimport { addTransaction } from \"../redux/blockchain/actions\"\n\nconst CreateTransactions = () => {\n  const dispatch = useDispatch()\n  //local state\n  const [from, setFrom] = useState('')\n  const [to, setTo] = useState('')\n  const [amount, setAmount] = useState(0)\n  const [error, setError] = useState('')\n  // redux\n  const { wallets } = useSelector(state => state.wallets)\n  const { chain } = useSelector(state => state.blockchain)\n  //handlers\n  const handleInput = (setter, { target: { value }}) => {\n    setter(value)\n    setError('')\n  }\n  const handleAddTransaction = () => {\n    let fromTx = wallets.find(wallet => wallet.publicKey === from)\n    let toTx = wallets.find(wallet => wallet.publicKey === to)\n    let parsedAmount = parseFloat(amount)\n    let fromFunds = ChainHelper.getBalanceOfAddress(chain, from)\n    if ( fromFunds >= parsedAmount) {\n      let tx = TransactionHelper.createTx(fromTx, toTx, parseFloat(amount))\n      TransactionHelper.signTx(tx, fromTx)\n      dispatch(addTransaction(tx))\n      clean()\n    }\n    else {\n      setError(`Insuficient funds of ${fromTx.name}`)\n      console.error(`Insuficient funds of ${fromTx.name}, current funds: ${fromFunds}`)\n    }\n  }\n\n  //methods\n  const clean = () => {\n    setFrom('')\n    setTo('')\n    setAmount(0)\n  }\n\n  //renders\n  const renderSelectOptions = () => {\n    return wallets.map(({publicKey, name })=> (<option key={publicKey} value={publicKey}>{name}</option>))\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <h2 className=\"font-bold text-xl mb-4\">Transactions</h2>\n      <div className=\"p-4 rounded bg-gray-100 w-full\">\n        <div className=\"flex mb-2\">\n          <label className=\"font-bold mr-2\" htmlFor=\"from\">From Address: </label>\n          <select className=\"flex-1\" name=\"from\" id=\"from\" value={from} onChange={(e) => handleInput(setFrom, e)}>\n            <option>Select an addr</option>\n            {renderSelectOptions() } \n          </select>\n        </div>\n        <div className=\"flex mb-2\">\n          <label className=\"font-bold mr-2\" htmlFor=\"to\">To Address: </label>\n          <select className=\"flex-1\" name=\"to\" id=\"to\" value={to} onChange={(e) => handleInput(setTo, e)}>\n            <option>Select an addr</option>\n            {renderSelectOptions() } \n          </select>\n        </div>\n        <div className=\"flex\">\n          <label className=\"font-bold mr-2\" htmlFor=\"from\">Amount: </label>\n          <input className=\"flex-1\" value={amount} onChange={(e) => handleInput(setAmount, e)} type=\"number\" step=\"10\" min=\"0\"/>\n        </div>\n        <div className=\"h-8 flex items-center text-red-400\">\n          { error }\n        </div>\n        <button\n          disabled={!amount || from === '' || to === ''} \n          onClick={handleAddTransaction} className=\"w-full py-1 px-4 rounded bg-gray-500 text-white focus:outline-none hover:bg-gray-600 disabled:bg-gray-200 disabled:cursor-not-allowed\">Create</button>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateTransactions","import Chain from './components/Chain'\nimport Wallets from './components/Wallets'\nimport CreateTransactions from './components/CreateTransactions'\n\nfunction App() {\n  return (\n    <div className=\"container pt-10 mx-auto px-4\">\n      <div className=\"grid md:grid-cols-3 xl:grid-cols-4 gap-4\">\n        <section className=\"md:col-span-2 xl:col-span-3\">\n          <Chain />\n        </section>\n        <div>\n        <section>\n          <Wallets />\n        </section>\n        <section>\n          <CreateTransactions />\n        </section>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import BlockHelper from \"../../helpers/block.helper\"\nimport TransactionHelper from \"../../helpers/transaction.helper\"\nimport { ADD_TRANSACTION, CHANGE_DIFFICULTY, CHANGE_REWARD, MINE, UPDATE_BLOCK } from \"./types\"\nconst INITIAL_REWARD= 100\nconst initialState = {\n  chain: [BlockHelper.createGenesisBlock(INITIAL_REWARD)],\n  difficulty: 2,\n  pendingTransactions: [],\n  miningReward: INITIAL_REWARD\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_DIFFICULTY: \n      return {\n        ...state,\n        difficulty: action.payload\n      }\n    case CHANGE_REWARD: \n      return {\n        ...state,\n        miningReward: action.payload\n      }\n    case UPDATE_BLOCK:\n      let chain = [...state.chain]\n      chain.splice(action.payload.index, 1, action.payload.block)\n      return {\n        ...state,\n        chain\n      }\n    case ADD_TRANSACTION: \n      let { payload: tx } = action\n      if (\n        !tx.fromAddress.publicKey ||\n        !tx.toAddress.privateKey\n      )\n        throw new Error('Transaction must include from and to address')\n\n      if (!TransactionHelper.isValid(tx))\n        throw new Error('Cannot add invalid transaction to chain')\n      return {\n        ...state,\n        pendingTransactions: [...state.pendingTransactions, tx]\n      }\n    case MINE:\n      return {\n        ...state,\n        pendingTransactions: [],\n        chain: [...state.chain, action.payload]\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import reducers from './reducers'\nexport default reducers","import WalletHelper from \"../../helpers/wallet.helper\";\nimport { ADD_WALLET } from \"./types\";\n\nconst initialState = {\n  wallets: [WalletHelper.getSatoshi(), WalletHelper.createRandomWallet(), WalletHelper.createRandomWallet()]\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_WALLET:\n      let wallet = WalletHelper.createRandomWallet()\n      return {\n        ...state,\n        wallets: [...state.wallets, wallet]\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import reducers from './reducers'\nexport default reducers","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport blockchain from './blockchain'\nimport wallets from './wallets'\nimport thunk from 'redux-thunk'\nconst reducers = combineReducers({\n  blockchain,\n  wallets\n})\nexport default createStore(reducers, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux'\nimport { Provider } from 'react-redux'\n// import WorkerContext from './contexts/mine.worker'\n// const minerWorker = new Worker('/blockchain/mine.worker.js', { type: module })\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <WorkerContext.Provider value={minerWorker}> */}\n      <Provider store={store}>\n        <App />\n      </Provider>\n    {/* </WorkerContext.Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}